var suggestions=document.getElementById('suggestions');var userinput=document.getElementById('userinput');document.addEventListener('keydown',inputFocus);function inputFocus(e){if(e.keyCode===191){e.preventDefault();userinput.focus();}
if(e.keyCode===27){userinput.blur();suggestions.classList.add('d-none');}}
document.addEventListener('click',function(event){var isClickInsideElement=suggestions.contains(event.target);if(!isClickInsideElement){suggestions.classList.add('d-none');}});document.addEventListener('keydown',suggestionFocus);function suggestionFocus(e){const focusableSuggestions=suggestions.querySelectorAll('a');const focusable=[...focusableSuggestions];const index=focusable.indexOf(document.activeElement);let nextIndex=0;if(e.keyCode===38){e.preventDefault();nextIndex=index>0?index-1:0;focusableSuggestions[nextIndex].focus();}
else if(e.keyCode===40){e.preventDefault();nextIndex=index+1<focusable.length?index+1:index;focusableSuggestions[nextIndex].focus();}}
(function(){var index=new FlexSearch({preset:'score',cache:true,doc:{id:'id',field:['title','description','content',],store:['href','title','description',],},});var docs=[{id:0,href:"https://www.hackartist.io/infra/introduction/",title:"Infrastructure",description:"This page introduces infrastructure.",content:"\u003cp\u003eImplementation of deployment environments to monitor and operate services.\u003c/p\u003e\n\u003ch2 id=\"key-features\"\u003eKey features\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eHardware management such as routers, IDC and so on\u003c/li\u003e\n\u003cli\u003eNetwork management such as firewall, network connection\u003c/li\u003e\n\u003cli\u003eSoftware management for services and programs\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"key-skills\"\u003eKey skills\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDevelopment of automatic script\u003c/li\u003e\n\u003cli\u003eRisk analysis\u003c/li\u003e\n\u003cli\u003eNetwork monitoring and analysis skills\u003c/li\u003e\n\u003cli\u003eProcess establishment\u003c/li\u003e\n\u003c/ul\u003e\n"},{id:1,href:"https://www.hackartist.io/design/uml/usecase-diagram/",title:"유즈케이스(Usecase) 다이어그램",description:"This page explains how to draw usecase diagram with plantuml.",content:"\u003ch2 id=\"유즈케이스-다이어그램이란\"\u003e유즈케이스 다이어그램이란?\u003c/h2\u003e\n\u003ch3 id=\"정의-및-목적\"\u003e정의 및 목적\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e유즈케이스 다이어그램은 사용자 간의 상호동작(interaction)을 표현\n\u003cul\u003e\n\u003cli\u003e사용자가 수행할 수 있는 기능\u003c/li\u003e\n\u003cli\u003e사용자와 시스템간의 상호동작 관계\u003c/li\u003e\n\u003cli\u003e기능간의 상호동작 관계\u003c/li\u003e\n\u003cli\u003e사용자와 다른 사용자간의 상호동작 관계\n\u003cul\u003e\n\u003cli\u003e다른 사용자란 시스템상에서 정의된 서로 다른 타입의 사용자를 의미\n\u003cul\u003e\n\u003cli\u003e예로, 서비스 사용자와 시스템 관리자 또는 판매자와 구매자 등을 의미\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"유즈케이스-다이어그램\"\u003e유즈케이스 다이어그램\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e간단한 온라인 식물 쇼핑몰에 대한 유즈케이스 다이어그램 예제\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfigure\u003e\n    \u003cimg src=\"/ox-hugo/plantuml-usecase.png\"/\u003e \n\u003c/figure\u003e\n\n\u003ch2 id=\"유즈케이스-다이어그램-그리기\"\u003e유즈케이스 다이어그램 그리기\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca class=\"link\" href=\"https://plantuml.com/ko/\"  target=\"_blank\" rel=\"noopener\"\n    \u003ePlant UML\u003c/a\u003e 을 이용하여 간단하게 그릴 수 있음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"사용자-및-기능-정의\"\u003e사용자 및 기능 정의\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e시스템 관점에서의 사용자 타입 정의\u003c/li\u003e\n\u003cli\u003e각 사용자 관점에서의 기능 정의\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cpre\u003e\u003ccode class=\"language-plantuml\" data-lang=\"plantuml\"\u003e@startuml\nskinparam backgroundcolor transparent\n\n:서비스 사용자:  as user \u0026lt;\u0026lt; User \u0026gt;\u0026gt;\n:시스템 관리자:  as adm \u0026lt;\u0026lt; Admin \u0026gt;\u0026gt;\n\n(회원가입) as su\n(로그인) as si\n(식물구경) as po\n(식물구매) as pp\n(장바구니) as bk\n(식물업로드) as pu\n(결제) as pay\n(결제내역 확인) as pl\n(배송 조회) as delivery\n\n@enduml\n\u003c/code\u003e\u003c/pre\u003e\u003cfigure\u003e\n    \u003cimg src=\"/ox-hugo/plantuml-usecase-comps.png\"/\u003e \n\u003c/figure\u003e\n\n\u003ch4 id=\"문법-설명\"\u003e문법 설명\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eskinparam backgroundcolor transparent\u003c/code\u003e 는 배경색을 투명으로 설정\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e:사용자 타입:\u003c/code\u003e 콜론을 중심으로 사용자의 이름을 입력\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eas xx\u003c/code\u003e 는 정의된 사용자를 뒤에서는 \u003ccode\u003exx\u003c/code\u003e 라는 키워드로 사용\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;\u0026lt; type \u0026gt;\u0026gt;\u003c/code\u003e 추가적인 사용자에 대한 설명\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eskinparam\u003c/code\u003e 을 통해서 이 타입에 따라 스타일 적용 가능\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e(기능이름)\u003c/code\u003e 괄호 안에 기능 이름을 입력\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eas xx\u003c/code\u003e 는 정의된 사용자를 뒤에서는 \u003ccode\u003exx\u003c/code\u003e 라는 키워드로 사용\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"기능-카테고리-정의\"\u003e기능 카테고리 정의\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e기능을 카테고리화 하여 추상화\n\u003cul\u003e\n\u003cli\u003e전체 기능의 관계나 사용자 관점에서의 큰 그림을 잘 보기 위한 목적\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cpre\u003e\u003ccode class=\"language-plantuml\" data-lang=\"plantuml\"\u003e@startuml\nskinparam backgroundcolor transparent\n\n:서비스 사용자:  as user \u0026lt;\u0026lt; User \u0026gt;\u0026gt;\n:시스템 관리자:  as adm \u0026lt;\u0026lt; Admin \u0026gt;\u0026gt;\n\nrectangle \u0026quot;사용자 관리\u0026quot; {\n        (회원가입) as su\n        (로그인) as si\n}\n\nrectangle \u0026quot;식물 관리\u0026quot; {\n        (식물구경) as po\n        (식물구매) as pp\n        (장바구니) as bk\n        (식물업로드) as pu\n}\nrectangle \u0026quot;주문 관리\u0026quot; {\n        (결제) as pay\n        (결제내역 확인) as pl\n        (배송 조회) as delivery\n}\n@enduml\n\u003c/code\u003e\u003c/pre\u003e\u003cfigure\u003e\n    \u003cimg src=\"/ox-hugo/plantuml-usecase-cat.png\"/\u003e \n\u003c/figure\u003e\n\n\u003ch4 id=\"문법-설명\"\u003e문법 설명\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003erectangle\u003c/code\u003e 은 박스를 그려주며, 안에 기능을 정의할 수 있도록 함.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"사용자와-기능간의-관계-정의\"\u003e사용자와 기능간의 관계 정의\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e각 사용자 관점에서 어떤 기능을 사용할 수 있을지 관계 정의\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cpre\u003e\u003ccode class=\"language-plantuml\" data-lang=\"plantuml\"\u003e@startuml\nskinparam backgroundcolor transparent\n\n:서비스 사용자:  as user \u0026lt;\u0026lt; User \u0026gt;\u0026gt;\n:시스템 관리자:  as adm \u0026lt;\u0026lt; Admin \u0026gt;\u0026gt;\n\nrectangle \u0026quot;사용자 관리\u0026quot; {\n        (회원가입) as su\n        (로그인) as si\n}\n\nrectangle \u0026quot;식물 관리\u0026quot; {\n        (식물구경) as po\n        (식물구매) as pp\n        (장바구니) as bk\n        (식물업로드) as pu\n}\nrectangle \u0026quot;주문 관리\u0026quot; {\n        (결제) as pay\n        (결제내역 확인) as pl\n        (배송 조회) as delivery\n}\n\nuser --\u0026gt; su\nuser --\u0026gt; si\nuser --\u0026gt; pp\nuser --\u0026gt; po\nuser --\u0026gt; bk\nuser --\u0026gt; delivery\n\nadm --\u0026gt; pu\nadm --\u0026gt; pl\n\n@enduml\n\u003c/code\u003e\u003c/pre\u003e\u003cfigure\u003e\n    \u003cimg src=\"/ox-hugo/plantuml-usecase-urel.png\"/\u003e \n\u003c/figure\u003e\n\n\u003ch4 id=\"문법-설명\"\u003e문법 설명\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e--\u0026gt;\u003c/code\u003e 실선 화살표로 관계 정의\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e-right-\u0026gt;\u003c/code\u003e, \u003ccode\u003e-left-\u0026gt;\u003c/code\u003e, \u003ccode\u003e-up-\u0026gt;\u003c/code\u003e, \u003ccode\u003e-down-\u0026gt;\u003c/code\u003e 등으로 방향을 나타낼 수 있음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"기능간의-관계-정의\"\u003e기능간의 관계 정의\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e사용자 관점에서 기능을 사용할 때, 상호동작할 수 있는 기능간의 관계 정의\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cpre\u003e\u003ccode class=\"language-plantuml\" data-lang=\"plantuml\"\u003e@startuml\nskinparam backgroundcolor transparent\n\n:서비스 사용자:  as user \u0026lt;\u0026lt; User \u0026gt;\u0026gt;\n:시스템 관리자:  as adm \u0026lt;\u0026lt; Admin \u0026gt;\u0026gt;\n\nrectangle \u0026quot;사용자 관리\u0026quot; {\n        (회원가입) as su\n        (로그인) as si\n}\n\nrectangle \u0026quot;식물 관리\u0026quot; {\n        (식물구경) as po\n        (식물구매) as pp\n        (장바구니) as bk\n        (식물업로드) as pu\n}\nrectangle \u0026quot;주문 관리\u0026quot; {\n        (결제) as pay\n        (결제내역 확인) as pl\n        (배송 조회) as delivery\n}\n\nuser --\u0026gt; su\nuser --\u0026gt; si\nuser --\u0026gt; pp\nuser --\u0026gt; po\nuser --\u0026gt; bk\nuser --\u0026gt; delivery\n\nadm --\u0026gt; pu\nadm --\u0026gt; pl\n\nsu ..\u0026gt; si\nbk ..\u0026gt; pp\nsu ..\u0026gt; si\npp ..\u0026gt; pay: 결제 정보\nbk ..\u0026gt; pay: 식물 목록 및 결제 정보\npu ..\u0026gt; po\n\n@enduml\n\u003c/code\u003e\u003c/pre\u003e\u003cfigure\u003e\n    \u003cimg src=\"/ox-hugo/plantuml-usecase-frel.png\"/\u003e \n\u003c/figure\u003e\n\n\u003ch4 id=\"문법-설명\"\u003e문법 설명\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e..\u0026gt;\u003c/code\u003e 실선 화살표로 관계 정의\n\u003cul\u003e\n\u003cli\u003e동일하게 방향을 적용할 수 있음.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e..\u0026gt;: 설명\u003c/code\u003e 콜론 구분자를 통해서 추가적인 설명\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n"},{id:2,href:"https://www.hackartist.io/blog/%EB%AF%B8%EB%9F%AC%EB%A6%AC%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EC%97%B0%EA%B2%B0%EC%83%81%ED%83%9C%EC%97%90-%EB%94%B0%EB%9D%BC-%EC%A0%95%EB%A0%AC-%EB%B0%8F-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8/",title:"미러리스트를 연결상태에 따라 정렬 및 업데이트",description:"This page explains how to update and rank a mirrorlist in Arch linux.",content:"\u003ch2 id=\"목적\"\u003e목적\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eArch 리눅스에서 미러리스트 업데이트\n\u003cul\u003e\n\u003cli\u003e업데이트시에 최신 미러리스트를 다운로드\u003c/li\u003e\n\u003cli\u003e다운로드된 미러리스트를 연결 상태에 따라 정렬\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"사전-요구필요사항\"\u003e사전 요구필요사항\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003epacman-contrib\u003c/code\u003e 설치\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003erankmirros\u003c/code\u003e 명령어 포함\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003epacman -S pacman-contrib\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"미러리스트-다운로드-및-정렬\"\u003e미러리스트 다운로드 및 정렬\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca class=\"link\" href=\"https://archlinux.org/mirrorlist/\"  target=\"_blank\" rel=\"noopener\"\n    \u003ePacman mirrorlist generator\u003c/a\u003e 사용\n\u003cul\u003e\n\u003cli\u003e체크하고 싶은것들 체크후에 \u003ccode\u003eGenerate List\u003c/code\u003e 를 클릭\u003c/li\u003e\n\u003cli\u003e해당 링크를 사용하여 아래와 같이 수행\n\u003cul\u003e\n\u003cli\u003e예제에서 사용된 링크는 한국과 일본의 미러리스트를 대상으로 하는 링크\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"nv\"\u003eServer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e http://mirror.premi.st/archlinux/\u003cspan class=\"nv\"\u003e$repo\u003c/span\u003e/os/\u003cspan class=\"nv\"\u003e$arch\u003c/span\u003e\n\u003cspan class=\"nv\"\u003eServer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e http://mirror.anigil.com/archlinux/\u003cspan class=\"nv\"\u003e$repo\u003c/span\u003e/os/\u003cspan class=\"nv\"\u003e$arch\u003c/span\u003e\n\u003cspan class=\"nv\"\u003eServer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e http://mirrors.cat.net/archlinux/\u003cspan class=\"nv\"\u003e$repo\u003c/span\u003e/os/\u003cspan class=\"nv\"\u003e$arch\u003c/span\u003e\n\u003cspan class=\"nv\"\u003eServer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e http://ftp.tsukuba.wide.ad.jp/Linux/archlinux/\u003cspan class=\"nv\"\u003e$repo\u003c/span\u003e/os/\u003cspan class=\"nv\"\u003e$arch\u003c/span\u003e\n\u003cspan class=\"nv\"\u003eServer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e http://ftp.jaist.ac.jp/pub/Linux/ArchLinux/\u003cspan class=\"nv\"\u003e$repo\u003c/span\u003e/os/\u003cspan class=\"nv\"\u003e$arch\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e"},{id:3,href:"https://www.hackartist.io/emacs/introduction/",title:"Introduction",description:"This page introduces Emacs.",content:"\u003cp\u003eEmacs를 사용하기 위해서 필요한 다양한 지식 및 기술 전달\u003c/p\u003e\n"},{id:4,href:"https://www.hackartist.io/infra/terminology/docker/",title:"Docker",description:"This page introduces docker.",content:"\u003ch2 id=\"호스트--host\"\u003e호스트(Host)\u003c/h2\u003e\n\u003cp\u003e도커 디먼을 수행하고 있는 운영체제 및 플랫폼\u003c/p\u003e\n\u003ch2 id=\"이미지--image\"\u003e이미지(Image)\u003c/h2\u003e\n\u003cp\u003e도커에서 관리되는 애플리케이션 템플릿\u003c/p\u003e\n\u003ch2 id=\"저장소--repository\"\u003e저장소(Repository)\u003c/h2\u003e\n\u003cp\u003e도커 이미지가 저장되는 저장소를 의미하며, 대부분은 \u003ccode\u003edomain/user-id/image-name\u003c/code\u003e 으로 구성됨\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003edomain\u003c/code\u003e 이 기술되지 않으면 기본적으로 \u003ccode\u003ehub.docker.com\u003c/code\u003e 의 registry 도메인을 기본으로 함.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"컨테이너--container\"\u003e컨테이너(Container)\u003c/h2\u003e\n\u003cp\u003e인스턴스화(구동중인) 된 도커 이미지\u003c/p\u003e\n\u003ch2 id=\"볼륨--volume\"\u003e볼륨(Volume)\u003c/h2\u003e\n\u003cp\u003e컨테이너를 위한 저장 공간\u003c/p\u003e\n"},{id:5,href:"https://www.hackartist.io/infra/docker/introduction/",title:"Introduction",description:"This page introduces docker.",content:"\u003ch2 id=\"basic-concept\"\u003eBasic Concept\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDocker provides isolated environment depending on each application.\n\u003cul\u003e\n\u003cli\u003eMinimization of affects among applications.\u003c/li\u003e\n\u003cli\u003eComposition of guest OS on Host machine.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eEach container utilizes Host\u0026rsquo;s hardware resources such like CPU, RAM and so on.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfigure\u003e\n    \u003cimg src=\"/ox-hugo/docker-basic-concept.png\"/\u003e \n\u003c/figure\u003e\n\n\u003ch2 id=\"docker-installation\"\u003eDocker installation\u003c/h2\u003e\n\u003cp\u003eIn order to install Docker, refer to \u003ca href=\"https://docs.docker.com/get-docker/\"\u003ehttps://docs.docker.com/get-docker/\u003c/a\u003e.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMac OS\u003c/li\u003e\n\u003cli\u003eWindows\u003c/li\u003e\n\u003cli\u003eLinux\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"installing-docker-on-arch-linux\"\u003eInstalling Docker on Arch Linux\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eYou can use \u003ccode\u003eyay\u003c/code\u003e, \u003ccode\u003epacman\u003c/code\u003e to install it.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003epacman -S docker\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"running-docker\"\u003eRunning Docker\u003c/h2\u003e\n\u003ch3 id=\"running-docker-daemon\"\u003eRunning Docker daemon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003esystemctl\u003c/code\u003e makes Docker daemon run at startup.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esystemctl start docker\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"checking-docker-status\"\u003eChecking Docker status\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eYou can check the status by \u003ccode\u003esystemctl\u003c/code\u003e.\n\u003cul\u003e\n\u003cli\u003eIf \u003ccode\u003esystemctl\u003c/code\u003e shows \u003ccode\u003eactive\u003c/code\u003e status, that means it successfully runs.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003esystemctl status docker\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre\u003e\u003ccode class=\"language-nil\" data-lang=\"nil\"\u003e...\nActive: active (running) ...\n...\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"도커-명령어\"\u003e도커 명령어\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003edocker\u003c/code\u003e shows all commands of docker CLI.\n\u003cul\u003e\n\u003cli\u003eDocker daemon must be active in advance.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n"},{id:6,href:"https://www.hackartist.io/design/introduction/",title:"Design",description:"This page introduces design for service development.",content:"\u003cp\u003ePlanning phase containing architecture and UI/UX design\u003c/p\u003e\n\u003ch2 id=\"key-features\"\u003eKey features\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFind requirements and user scenarios\u003c/li\u003e\n\u003cli\u003eDesign function and deployment architecture\u003c/li\u003e\n\u003cli\u003eDesign user interface\u003c/li\u003e\n\u003cli\u003eProject management and methodology\u003c/li\u003e\n\u003cli\u003eSurvey technical stack\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"key-skills\"\u003eKey skills\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eStructuring and abstraction\u003c/li\u003e\n\u003cli\u003eUI/UX Design\u003c/li\u003e\n\u003cli\u003eRisk analysis\u003c/li\u003e\n\u003cli\u003eProcess establishment\u003c/li\u003e\n\u003cli\u003eOvercoming learning curve on bleeding edge technology\u003c/li\u003e\n\u003c/ul\u003e\n"},{id:7,href:"https://www.hackartist.io/design/terminology/uml-terms/",title:"UML",description:"This page introduces terminologies on UML",content:"\u003ch2 id=\"액션--action\"\u003e액션(action)\u003c/h2\u003e\n\u003cp\u003e액티비티를 이루는 단위로 하나의 단계에서 발생하는 행위\u003c/p\u003e\n"},{id:8,href:"https://www.hackartist.io/design/uml/sequence/",title:"시퀀스(Sequence) 다이어그램",description:"This page explains how to draw sequence diagram with plantuml.",content:"\u003ch2 id=\"시퀀스-다이어그램이란\"\u003e시퀀스 다이어그램이란?\u003c/h2\u003e\n\u003ch3 id=\"정의-및-목적\"\u003e정의 및 목적\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e시간의 흐름에 따른 오브젝트들간의 상호동작(interaction)을 표현\n\u003cul\u003e\n\u003cli\u003e시나리오에 연관된 오브젝트들을 표현\u003c/li\u003e\n\u003cli\u003e각 오브젝트들간의 주고받는 메시지 표현\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e이벤트 다이어그램(event diagrams) 또는 이벤트 시나리오(event scenarios)로 불리기도 함.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"시퀀스-다이어그램\"\u003e시퀀스 다이어그램\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca class=\"link\" href=\"/design/uml/usecase-diagram/\" \u003e유즈케이스 다이어그램\u003c/a\u003e에서 작성한 \u003ccode\u003e식물구매\u003c/code\u003e 시나리오\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfigure\u003e\n    \u003cimg src=\"/ox-hugo/plantuml-sequence-top.png\"/\u003e \n\u003c/figure\u003e\n\n\u003ch2 id=\"시퀀스-다이어그램-그리기\"\u003e시퀀스 다이어그램 그리기\u003c/h2\u003e\n\u003ch3 id=\"카테고리별-참여자-정의\"\u003e카테고리별 참여자 정의\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e해당 시나리오 참여하는 사용자 및 서비스를 정의\n\u003cul\u003e\n\u003cli\u003e시나리오를 그리면서 혼동을 피하기 위해서 참여자를 명확히 정의\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cpre\u003e\u003ccode class=\"language-plantuml\" data-lang=\"plantuml\"\u003e@startuml\nskinparam backgroundcolor transparent\n\nactor \u0026quot;서비스 사용자\u0026quot; as u\nbox \u0026quot;식물 쇼핑몰 서비스\u0026quot;\n        participant \u0026quot;식물앱\u0026quot; as app\n        control \u0026quot;인증 서버\u0026quot; as auth\n        participant \u0026quot;API 서버\u0026quot; as api\n        database \u0026quot;사용자 DB\u0026quot; as adb\n        database \u0026quot;식물 DB\u0026quot; as db\nend box\n\nbox \u0026quot;외부 서비스\u0026quot;\n        participant \u0026quot;페이먼트 게이트웨이(PG)\u0026quot; as pg\nend box\n@enduml\n\u003c/code\u003e\u003c/pre\u003e\u003cfigure\u003e\n    \u003cimg src=\"/ox-hugo/plantuml-sequence-participants.png\"/\u003e \n\u003c/figure\u003e\n\n\u003ch4 id=\"문법-설명\"\u003e문법 설명\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e참여자 키워드는 \u003ccode\u003eactor\u003c/code\u003e, \u003ccode\u003eparticipant\u003c/code\u003e, \u003ccode\u003econtrol\u003c/code\u003e 등 다양한 키워드가 있음.\n\u003cul\u003e\n\u003cli\u003e상세한 정보는\u003ca class=\"link\" href=\"https://plantuml-documentation.readthedocs.io/en/latest/diagrams/sequence.html#participants\"  target=\"_blank\" rel=\"noopener\"\n    \u003ePlant UML 참여자 설명\u003c/a\u003e에서 확인\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eas xx\u003c/code\u003e 는 시퀀스 다이어그램을 그릴때 사용할 이름(\u003ccode\u003exx\u003c/code\u003e)을 정의\u003c/li\u003e\n\u003cli\u003e인터넷 서비스 설계측면에서는 주로 \u003ccode\u003eactor\u003c/code\u003e, \u003ccode\u003eparticipant\u003c/code\u003e, \u003ccode\u003edatabase\u003c/code\u003e 수준을 사용\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ebox\u003c/code\u003e 는 시나리오 측면에서 각 참여자들을 쉽게 구분하기 위해서 사용\n\u003cul\u003e\n\u003cli\u003e외부 컴포넌트 및 참여자의 특징을 구분\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"사용자-시나리오-정의\"\u003e사용자 시나리오 정의\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e사용자가 수행하는 행위를 중심으로 시나리오 작성\n\u003cul\u003e\n\u003cli\u003e사용자 관점에서의 행위와 정보에 중점을 맞춤.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e본 시나리오에서는 사용자와 웹/앱 간의 시나리오 작성\n\u003cul\u003e\n\u003cli\u003e개발자와 기획자 간의 협의를 위해서 사용될 수 있음.\u003c/li\u003e\n\u003cli\u003e요구되는 정보에 대한 상세화가 될수록 좋음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cpre\u003e\u003ccode class=\"language-plantuml\" data-lang=\"plantuml\"\u003e@startuml\nskinparam backgroundcolor transparent\nskinparam sequence {\n        groupbodybackgroundcolor transparent\n}\nactor \u0026quot;서비스 사용자\u0026quot; as u\nbox \u0026quot;식물 쇼핑몰 서비스\u0026quot;\n        participant \u0026quot;식물앱\u0026quot; as app\n        control \u0026quot;인증 서버\u0026quot; as auth\n        participant \u0026quot;API 서버\u0026quot; as api\n        database \u0026quot;사용자 DB\u0026quot; as adb\n        database \u0026quot;식물 DB\u0026quot; as db\nend box\n\nbox \u0026quot;외부 서비스\u0026quot;\n        participant \u0026quot;페이먼트 게이트웨이(PG)\u0026quot; as pg\nend box\n\nu -\u0026gt; app+: 식물검색\nreturn 식물목록 페이지\nu -\u0026gt; app+: 식물선택\nreturn 식물 상세페이지\nu -\u0026gt; app: 식물 구매\nactivate app\n        app -\u0026gt; u: 로그인 페이지\n        u -\u0026gt; app: 로그인 정보\n        alt 인증성공\n                app -\u0026gt; u: 인증완료 및 결제페이지\n                u -\u0026gt; app: 결제\n                app -\u0026gt; u: 결제 결과 페이지\n        else 인증실패\n                app -\u0026gt; u: 인증에러\n        end\ndeactivate app\n\n@enduml\n\u003c/code\u003e\u003c/pre\u003e\u003cfigure\u003e\n    \u003cimg src=\"/ox-hugo/plantuml-sequence-userscene.png\"/\u003e \n\u003c/figure\u003e\n\n\u003ch4 id=\"문법-설명\"\u003e문법 설명\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ea -\u0026gt; b: {{message}}\u003c/code\u003e 는 \u003ccode\u003ea\u003c/code\u003e 가 \u003ccode\u003eb\u003c/code\u003e 에게 \u003ccode\u003e{{message}}\u003c/code\u003e 를 준다라는 의미\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e-\u0026gt;\u003c/code\u003e 실선으로 연결 해주며, \u003ccode\u003e--\u0026gt;\u003c/code\u003e 사용시 점선으로 표시됨.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ea -\u0026gt; b+: ..\u003c/code\u003e 를 사용시에 \u003ccode\u003eb\u003c/code\u003e 를 활성화 시킨다는 의미\n\u003cul\u003e\n\u003cli\u003e활성화란 시퀀스 다이어그램에서 하얀선을 표시해서 세션이 유지됨을 표시\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ereturn\u003c/code\u003e 과 쌍으로 사용되어야 하며, 가장 가까운것을 기준으로 세션이 비활성화 됨.\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ereturn\u003c/code\u003e 점선 화살표를 생성\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eactivate\u003c/code\u003e, \u003ccode\u003edeactivate\u003c/code\u003e 도 \u003ccode\u003e+\u003c/code\u003e 와 동일하게 세션 활성화를 의미\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eactivate\u003c/code\u003e, \u003ccode\u003edeactivate\u003c/code\u003e 처리가 끝난 다음에 명시적으로 비활성화\u003c/li\u003e\n\u003cli\u003e가장 근접한 순으로 리턴하는 경우가 아닐 때 사용\u003c/li\u003e\n\u003cli\u003e여러번의 \u003ccode\u003edeactivate\u003c/code\u003e 가 가능하므로, 리턴이 명시적이지 않을때 사용 가능.\u003c/li\u003e\n\u003cli\u003e세션 활성화 구간을 명확하게 하고 싶을 때 사용\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ealt/else/end\u003c/code\u003e 를 통해서 특정 케이스 대한 시나리오 작성\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eelse\u003c/code\u003e 를 여러개 입력하여 상황을 추가 할 수 있음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"서비스간-시나리오-정의\"\u003e서비스간 시나리오 정의\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e서비스 간에 동작하는 시나리오에 대해서 작성\n\u003cul\u003e\n\u003cli\u003e개발자들간의 협의를 위해서 주로 사용할 수 있음.\u003c/li\u003e\n\u003cli\u003e인터페이스를 중심으로 작성하면, 도움이 될 수 있음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cpre\u003e\u003ccode class=\"language-plantuml\" data-lang=\"plantuml\"\u003e@startuml\nskinparam backgroundcolor transparent\nskinparam sequence {\n        groupbodybackgroundcolor transparent\n}\nactor \u0026quot;서비스 사용자\u0026quot; as u\nbox \u0026quot;식물 쇼핑몰 서비스\u0026quot;\n        participant \u0026quot;식물앱\u0026quot; as app\n        control \u0026quot;인증 서버\u0026quot; as auth\n        participant \u0026quot;API 서버\u0026quot; as api\n        database \u0026quot;사용자 DB\u0026quot; as adb\n        database \u0026quot;식물 DB\u0026quot; as db\nend box\n\nbox \u0026quot;외부 서비스\u0026quot;\n        participant \u0026quot;페이먼트 게이트웨이(PG)\u0026quot; as pg\nend box\n\nu -\u0026gt; app+: 식물검색\napp -\u0026gt; api+: 검색정보\nreturn 식물목록\nreturn 식물목록 페이지\nu -\u0026gt; app+: 식물선택\napp -\u0026gt; api+: 식물아이디\nreturn 식물상세정보\nreturn 식물 상세페이지\nu -\u0026gt; app: 식물 구매\nactivate app\n        app -\u0026gt; u: 로그인 페이지\n        u -\u0026gt; app: 로그인 정보\n        app -\u0026gt; auth: 사용자 이름, 비밀번호\n        activate auth\n                auth -\u0026gt; auth: 사용자 검증\n\n                alt 인증성공\n                        auth -\u0026gt; app: 인증토큰\n                        app -\u0026gt; u: 인증완료 및 결제페이지\n                        u -\u0026gt; app: 결제\n                        app -\u0026gt; u: 결제 결과 페이지\n                else 인증실패\n                        auth -\u0026gt; app: 에러\n                        deactivate auth\n                        app -\u0026gt; u: 인증에러\n                end\n        deactivate auth\ndeactivate app\n\n@enduml\n\u003c/code\u003e\u003c/pre\u003e\u003cfigure\u003e\n    \u003cimg src=\"/ox-hugo/plantuml-sequence-service.png\"/\u003e \n\u003c/figure\u003e\n\n\u003ch3 id=\"서비스간-상세시나리오-정의\"\u003e서비스간 상세시나리오 정의\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e데이터베이스 및 외부서비스와의 상호동작에 대해서 작성\n\u003cul\u003e\n\u003cli\u003e본 단계는 인터넷 서비스 설계에서는 작성하지 않아도 설계상에 큰 문제는 없음.\u003c/li\u003e\n\u003cli\u003e설계를 최소화하고자 하는 경우에는 작성하지 않을 수 있음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cpre\u003e\u003ccode class=\"language-plantuml\" data-lang=\"plantuml\"\u003e@startuml\nskinparam backgroundcolor transparent\nskinparam sequence {\n        groupbodybackgroundcolor transparent\n}\nactor \u0026quot;서비스 사용자\u0026quot; as u\nbox \u0026quot;식물 쇼핑몰 서비스\u0026quot;\n        participant \u0026quot;식물앱\u0026quot; as app\n        control \u0026quot;인증 서버\u0026quot; as auth\n        participant \u0026quot;API 서버\u0026quot; as api\n        database \u0026quot;사용자 DB\u0026quot; as adb\n        database \u0026quot;식물 DB\u0026quot; as db\nend box\n\nbox \u0026quot;외부 서비스\u0026quot;\n        participant \u0026quot;페이먼트 게이트웨이(PG)\u0026quot; as pg\nend box\n\nu -\u0026gt; app+: 식물검색\napp -\u0026gt; api+: 검색정보\napi -\u0026gt; db+: 식물검색 쿼리\nreturn 검색결과\nreturn 식물목록\nreturn 식물목록 페이지\nu -\u0026gt; app+: 식물선택\napp -\u0026gt; api+: 식물아이디\napi -\u0026gt; db+: 식물아이디 조회\nreturn 식물상세정보\nreturn 식물상세정보\nreturn 식물 상세페이지\nu -\u0026gt; app: 식물 구매\nactivate app\n        app -\u0026gt; u: 로그인 페이지\n        u -\u0026gt; app: 로그인 정보\n        app -\u0026gt; auth: 사용자 이름, 비밀번호\n        activate auth\n                auth -\u0026gt; adb+: 사용자이름, 비밀번호\n                return 사용자 정보\n                auth -\u0026gt; auth: 사용자 검증\n\n                alt 인증성공\n                        auth -\u0026gt; app: 인증토큰\n                        app -\u0026gt; u: 인증완료 및 결제페이지\n                        u -\u0026gt; app: 결제\n                        app -\u0026gt; pg: 상품결제정보, 사용자정보\n                        activate pg\n                                pg --\u0026gt; u: 결제페이지\n                                u --\u0026gt; pg: 결제정보\n                                alt 결제성공\n                                        pg -\u0026gt; app: 결제키\n                                        app -\u0026gt; api+: 결제키정보\n                                        api -\u0026gt; pg: 결제키\n                                        pg -\u0026gt; api: 결제정보\n                                        return 완료\n                                else 결제실패\n                                        pg -\u0026gt; app: 결제에러\n                                end\n                        deactivate pg\n                        app -\u0026gt; u: 결제 결과 페이지\n                else 인증실패\n                        auth -\u0026gt; app: 에러\n                        deactivate auth\n                        app -\u0026gt; u: 인증에러\n                end\n        deactivate auth\ndeactivate app\n\n@enduml\n\u003c/code\u003e\u003c/pre\u003e\u003cfigure\u003e\n    \u003cimg src=\"/ox-hugo/plantuml-sequence-db.png\"/\u003e \n\u003c/figure\u003e\n\n\u003ch3 id=\"스타일-적용-및-가독성-향상\"\u003e스타일 적용 및 가독성 향상\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e박스와 참여자간의 간격 조정을 위해서 패딩을 스타일 적용\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eboxpadding\u003c/code\u003e, \u003ccode\u003eparticipantpadding\u003c/code\u003e 적용\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e== xx ==\u003c/code\u003e 를 통해서 분리자를 추가할 수 있음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cpre\u003e\u003ccode class=\"language-plantuml\" data-lang=\"plantuml\"\u003e@startuml\nskinparam backgroundcolor transparent\nskinparam boxpadding 10\nskinparam sequence {\n        participantpadding 20\n        groupbodybackgroundcolor transparent\n}\nactor \u0026quot;서비스 사용자\u0026quot; as u\nbox \u0026quot;식물 쇼핑몰 서비스\u0026quot;\n        participant \u0026quot;식물앱\u0026quot; as app\n        control \u0026quot;인증 서버\u0026quot; as auth\n        participant \u0026quot;API 서버\u0026quot; as api\n        database \u0026quot;사용자 DB\u0026quot; as adb\n        database \u0026quot;식물 DB\u0026quot; as db\nend box\n\nbox \u0026quot;외부 서비스\u0026quot;\n        participant \u0026quot;페이먼트 게이트웨이(PG)\u0026quot; as pg\nend box\n\n== 비회원 및 회원 앱 사용 ==\nu -\u0026gt; app+: 식물검색\napp -\u0026gt; api+: 검색정보\napi -\u0026gt; db+: 식물검색 쿼리\nreturn 검색결과\nreturn 식물목록\nreturn 식물목록 페이지\nu -\u0026gt; app+: 식물선택\napp -\u0026gt; api+: 식물아이디\napi -\u0026gt; db+: 식물아이디 조회\nreturn 식물상세정보\nreturn 식물상세정보\nreturn 식물 상세페이지\n\n== 회원전용 식물 구매 ==\nu -\u0026gt; app: 식물 구매\nactivate app\n        app -\u0026gt; u: 로그인 페이지\n        u -\u0026gt; app: 로그인 정보\n        app -\u0026gt; auth: 사용자 이름, 비밀번호\n        activate auth\n                auth -\u0026gt; adb+: 사용자이름, 비밀번호\n                return 사용자 정보\n                auth -\u0026gt; auth: 사용자 검증\n\n                alt 인증성공\n                        auth -\u0026gt; app: 인증토큰\n                        app -\u0026gt; u: 인증완료 및 결제페이지\n                        u -\u0026gt; app: 결제\n                        app -\u0026gt; pg: 상품결제정보, 사용자정보\n                        activate pg\n                                pg --\u0026gt; u: 결제페이지\n                                u --\u0026gt; pg: 결제정보\n                                alt 결제성공\n                                        pg -\u0026gt; app: 결제키\n                                        app -\u0026gt; api+: 결제키정보\n                                        api -\u0026gt; pg: 결제키\n                                        pg -\u0026gt; api: 결제정보\n                                        return 완료\n                                else 결제실패\n                                        pg -\u0026gt; app: 결제에러\n                                end\n                        deactivate pg\n                        app -\u0026gt; u: 결제 결과 페이지\n                else 인증실패\n                        auth -\u0026gt; app: 에러\n                        deactivate auth\n                        app -\u0026gt; u: 인증에러\n                end\n        deactivate auth\ndeactivate app\n\n@enduml\n\u003c/code\u003e\u003c/pre\u003e\u003cfigure\u003e\n    \u003cimg src=\"/ox-hugo/plantuml-sequence-style.png\"/\u003e \n\u003c/figure\u003e\n\n"},{id:9,href:"https://www.hackartist.io/emacs/macos/input-method/",title:"Mac OS 키보드 레이아웃 인코딩",description:"This page explains how shortcut for switching keyboard layout can be set as same between Mac OS and Emacs.",content:"\u003ch2 id=\"mac-os-에서의-키보드-단축키-이슈\"\u003eMac OS 에서의 키보드 단축키 이슈\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eShift+SPC\u003c/code\u003e 를 Mac OS와 Emacs의 키보드 한/영 전환 단축키로 사용하는 경우\n\u003cul\u003e\n\u003cli\u003eMac OS 에서 단축키를 먼저 인터셉트하기 때문에, Emacs의 \u003ccode\u003etoggle-input-method\u003c/code\u003e 가 호출되지 않고 OS 레벨의 레이아웃이 변함.\u003c/li\u003e\n\u003cli\u003e한글 입력 자체는 되지만, \u003ccode\u003eM-x\u003c/code\u003e 를 입력했을 때, \u003ccode\u003eM-ㅌ\u003c/code\u003e 등으로 나오면서 명령어가 정상적으로 동작 안함.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"해결을-위한-기본-개념\"\u003e해결을 위한 기본 개념\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eMac OS 와 Emacs 의 한영 전환을 다르게 설정하면 됨.\n\u003cul\u003e\n\u003cli\u003eMac OS 의 한/영 전환을 \u003ccode\u003eCMD+SPC\u003c/code\u003e 로 설정\u003c/li\u003e\n\u003cli\u003eEmacs 의 \u003ccode\u003etoggle-input-method\u003c/code\u003e 를 다르게 설정\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eMac OS 와 Emacs 에서 서로 다른 단축키를 사용해야 하기 때문에 헷갈림\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"동일한-키를-이용하여-한영-전환-설정\"\u003e동일한 키를 이용하여 한영 전환 설정\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eMac OS에서는 \u003ccode\u003e한/영 전환\u003c/code\u003e 을 \u003ccode\u003eCMD+SPC\u003c/code\u003e 로 설정하고, Emacs 에서는 \u003ccode\u003eS-SPC\u003c/code\u003e 로 설정\u003c/li\u003e\n\u003cli\u003e활성화(frontmost)된 애플리케이션이 \u003ccode\u003eEmacs\u003c/code\u003e 가 아닐 때는 \u003ccode\u003eShift+SPC\u003c/code\u003e 가 \u003ccode\u003eCMD+SPC\u003c/code\u003e 인 것처럼 동작하도록 설정\n\u003cul\u003e\n\u003cli\u003e해당 설정을 하기 위해서 \u003ccode\u003ekarabiner elements\u003c/code\u003e 를 통해서 수행할 수 있음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"karabiner-elements-설치\"\u003eKarabiner elements 설치\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ebrew\u003c/code\u003e 를 통해서 설치 할 수 있음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ebrew cask install karabiner-elements\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"karabiner-elements-설정\"\u003eKarabiner elements 설정\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e~/.config/karabiner/assets/complex_modifications/emacs.json\u003c/code\u003e 에 설정\n\u003cul\u003e\n\u003cli\u003e상세 설정 방법은 \u003ca class=\"link\" href=\"https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/\"  target=\"_blank\" rel=\"noopener\"\n    \u003eKarabiner-Elements 문법 사이트\u003c/a\u003e에서 확인 가능\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;title\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;shift_spacebar to command_spacebar unless Emacs\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;maintainers\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n        \u003cspan class=\"s2\"\u003e\u0026#34;hackaritst\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e],\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;rules\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026#34;description\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;shift_spacebar to command_spacebar unless Emacs\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026#34;manipulators\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n                \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;basic\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026#34;from\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                        \u003cspan class=\"nt\"\u003e\u0026#34;key_code\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;spacebar\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                        \u003cspan class=\"nt\"\u003e\u0026#34;modifiers\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                            \u003cspan class=\"nt\"\u003e\u0026#34;mandatory\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n                                \u003cspan class=\"s2\"\u003e\u0026#34;shift\u0026#34;\u003c/span\u003e\n                            \u003cspan class=\"p\"\u003e]\u003c/span\u003e\n                        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n                    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026#34;to\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n                        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                            \u003cspan class=\"nt\"\u003e\u0026#34;key_code\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;spacebar\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                            \u003cspan class=\"nt\"\u003e\u0026#34;modifiers\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n                                \u003cspan class=\"s2\"\u003e\u0026#34;left_command\u0026#34;\u003c/span\u003e\n                            \u003cspan class=\"p\"\u003e]\u003c/span\u003e\n                        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n                    \u003cspan class=\"p\"\u003e],\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026#34;conditions\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n                        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                            \u003cspan class=\"nt\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;frontmost_application_unless\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                            \u003cspan class=\"nt\"\u003e\u0026#34;bundle_identifiers\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n                                \u003cspan class=\"s2\"\u003e\u0026#34;^org\\\\.gnu\\\\.Emacs$\u0026#34;\u003c/span\u003e\n                            \u003cspan class=\"p\"\u003e]\u003c/span\u003e\n                        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n                    \u003cspan class=\"p\"\u003e]\u003c/span\u003e\n                \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e]\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e"},{id:10,href:"https://www.hackartist.io/infra/docker/docker-basic/",title:"Container management",description:"This page explains how you can manage docker containers.",content:"\u003ch2 id=\"container-creation\"\u003eContainer creation\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a docker container using CentOS image\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e-it\u003c/code\u003e flag means executing container with attaching their terminal (TTY) and standard input (STDIN)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e--name\u003c/code\u003e flag makes us set a human readable name of the container\n\u003cul\u003e\n\u003cli\u003eYou can easily manage the container if it is named.\u003c/li\u003e\n\u003cli\u003eIf you don\u0026rsquo;t specify a name of the container, it uses a commit tag as the name and you can use 3 or 4 leading alphanumeric of the name hash to manage it.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003edocker run --name centos -it centos\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eDetach the attached TTY\n\u003cul\u003e\n\u003cli\u003eYou hit \u003ccode\u003eCtrl-p Ctrl-q\u003c/code\u003e to exit the attached terminal without shutting down the container.\u003c/li\u003e\n\u003cli\u003eIf you type and run \u003ccode\u003eexit\u003c/code\u003e in your attached terminal, it makes the container turned off. In order to turn on it, use \u003ccode\u003edocker start centos\u003c/code\u003e.\n\u003cul\u003e\n\u003cli\u003eRefer to the next section to connect the restarted container.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"connect-to-your-container\"\u003eConnect to your container\u003c/h2\u003e\n\u003ch3 id=\"check-container-s-status\"\u003eCheck container\u0026rsquo;s status\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eUse \u003ccode\u003edocker ps\u003c/code\u003e command to list running containers.\u003c/li\u003e\n\u003cli\u003eFor listing all containers event if not running, run \u003ccode\u003edocker ps -a\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eYou can retrieve the container named by \u003ccode\u003ecentos\u003c/code\u003e by \u003ccode\u003edocker ps -a -f name=centos\u003c/code\u003e.\n\u003cul\u003e\n\u003cli\u003eFor more details on \u003ccode\u003efilter\u003c/code\u003e, refer to \u003ca class=\"link\" href=\"https://docs.docker.com/engine/reference/commandline/ps/#filtering\"  target=\"_blank\" rel=\"noopener\"\n    \u003efilter section\u003c/a\u003e in the official site.\u003c/li\u003e\n\u003cli\u003eInstead of the \u003ccode\u003efilter\u003c/code\u003e, you can use grep as \u003ccode\u003edocker ps -a | grep centos\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eYou can get the minimum information by \u003ccode\u003edocker ps --format \u0026quot;table {{.Names}}\\t{{.Status}}\\t{{.Ports}}\u0026quot;\u003c/code\u003e.\n\u003cul\u003e\n\u003cli\u003eYou can learn about \u003ccode\u003eformat\u003c/code\u003e on \u003ca class=\"link\" href=\"https://docs.docker.com/engine/reference/commandline/ps/#formatting\"  target=\"_blank\" rel=\"noopener\"\n    \u003edocker format section\u003c/a\u003e in the official site.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"connect-into-the-container\"\u003eConnect into the container\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eexec\u003c/code\u003e sub-command helps us to connect into the container.\n\u003cul\u003e\n\u003cli\u003eYou must add \u003ccode\u003e-it\u003c/code\u003e flags to connect it, the following command shows execution of \u003ccode\u003ebash\u003c/code\u003e command to connect to the container.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003edocker \u003cspan class=\"nb\"\u003eexec\u003c/span\u003e -it centos bash\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eYou can use \u003ccode\u003eattach\u003c/code\u003e sub-command to attach your container.\n\u003cul\u003e\n\u003cli\u003eNote that \u003ccode\u003eattach\u003c/code\u003e sub-command makes you directly attach to running environment. It means that if you run exit or invoke \u003ccode\u003eSIGTERM\u003c/code\u003e, it terminates your container. Therefore, you use \u003ccode\u003eCtrl-p Ctrl-q\u003c/code\u003e shortcut to detach the container.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"docker-hub\"\u003eDocker hub\u003c/h2\u003e\n\u003ch3 id=\"what-is-docker-hub\"\u003eWhat is docker hub?\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eDocker image portal\n\u003cul\u003e\n\u003cli\u003eIn order to search docker images, you can use \u003ccode\u003esearch\u003c/code\u003e sub-command.\n\u003cul\u003e\n\u003cli\u003eAlso, you can containerize the searched images.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003edocker search ubuntu\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eNAME\u003c/th\u003e\n\u003cth\u003eDESCRIPTION\u003c/th\u003e\n\u003cth\u003eSTARS\u003c/th\u003e\n\u003cth\u003eOFFICIAL\u003c/th\u003e\n\u003cth\u003eAUTOMATED\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eubuntu\u003c/td\u003e\n\u003ctd\u003eUbuntu is a Debian-based Linux operating sys…\u003c/td\u003e\n\u003ctd\u003e11806\u003c/td\u003e\n\u003ctd\u003e[OK]\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003edorowu/ubuntu-desktop-lxde-vnc\u003c/td\u003e\n\u003ctd\u003eDocker image to provide HTML5 VNC interface\u003c/td\u003e\n\u003ctd\u003e…\u003c/td\u003e\n\u003ctd\u003e497\u003c/td\u003e\n\u003ctd\u003e[OK]\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"using-the-docker-hub\"\u003eUsing the docker hub\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca class=\"link\" href=\"https://hub.docker.com/\"  target=\"_blank\" rel=\"noopener\"\n    \u003eDocker hub\u003c/a\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDocker hub is a website for searching docker images.\n\u003cul\u003e\n\u003cli\u003eIn the results, you can find tags of an image in \u003ccode\u003etags\u003c/code\u003e tab.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfigure\u003e\n    \u003cimg src=\"/ox-hugo/2021-02-09_23-13-27_screenshot.png\"/\u003e \n\u003c/figure\u003e\n\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"using-docker-image-and-tags\"\u003eUsing docker image and tags\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eSearching docker images on docker hub\n\u003cul\u003e\n\u003cli\u003eIn \u003ccode\u003etags\u003c/code\u003e tab, find a tag you want to containerize.\u003c/li\u003e\n\u003cli\u003eIn order to containerize an image, describe the image and tag formed by \u003ccode\u003e{image repository}:{tag}\u003c/code\u003e.\n\u003cul\u003e\n\u003cli\u003eThe below command show a way to run ubuntu \u003ccode\u003e20.04\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003edocker run -it --name ubuntu ubuntu:20.04\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e"},{id:11,href:"https://www.hackartist.io/devel/introduction/",title:"Development",description:"This page introduces service development.",content:"\u003cp\u003eService deployment\u003c/p\u003e\n\u003ch2 id=\"key-features\"\u003eKey features\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFind the way to implement\u003c/li\u003e\n\u003cli\u003eDevelop and review services\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"key-skills\"\u003eKey skills\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn new technologies\u003c/li\u003e\n\u003cli\u003eUtilize and analyze open source projects\u003c/li\u003e\n\u003cli\u003eHigher programming skill\u003c/li\u003e\n\u003cli\u003eCode and issue management\u003c/li\u003e\n\u003c/ul\u003e\n"},{id:12,href:"https://www.hackartist.io/emacs/input-method/disable-xim/",title:"XIM 비활성화",description:"This page explains how to disable XIM on Emacs.",content:"\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e이맥스(Emacs)의 한/영 스위치 사용\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eXIM\u003c/code\u003e 을 이맥스에서 사용하지 못하도록 비활성화\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003etoggle-input-method\u003c/code\u003e 를 \u003ccode\u003eibus\u003c/code\u003e 등과 같은 \u003ccode\u003eXIM\u003c/code\u003e 과 동일하게 설정\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003e~/.Xresources\u003c/code\u003e 에 \u003ccode\u003eXIM\u003c/code\u003e 을 비활성화 할 애플리케이션 입력\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cpre\u003e\u003ccode class=\"language-conf\" data-lang=\"conf\"\u003eEmacs*useXIM: false\n\u003c/code\u003e\u003c/pre\u003e"},{id:13,href:"https://www.hackartist.io/design/uml/activity/",title:"액티비티(Activity) 다이어그램",description:"This page explains how to draw activity diagram with plantuml.",content:"\u003ch2 id=\"정의-및-목적\"\u003e정의 및 목적\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e액티비티 다이어그램은 액티비티(activity) 및 액션(action)을 표현\n\u003cul\u003e\n\u003cli\u003e반복, 조건, 병렬 등을 표현\u003c/li\u003e\n\u003cli\u003e전체적의 제어 흐름을 보여주는 것이 주요 목적\n\u003cul\u003e\n\u003cli\u003e필요에 따라 데이터의 흐름도 보여줄 수 있음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"액티비티-다이어그램-주요-표현\"\u003e액티비티 다이어그램 주요 표현\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e검정색 원은 시작점\u003c/li\u003e\n\u003cli\u003e이중선이 있는 검정색 원은 종료점\u003c/li\u003e\n\u003cli\u003e타원은 액션(action), 다이아몬드 또는 육각형은 결정(decision)을 표현\u003c/li\u003e\n\u003cli\u003e바(bar)는 병렬 액티비티의 시작(split) 및 종료(join)를 표현\u003c/li\u003e\n\u003cli\u003e컬럼(swimlane)은 각 각 컴포넌트를 의미\n\u003cul\u003e\n\u003cli\u003e추상화된 레벨에서 전체 컴포넌트 간의 액션의 흐름을 보기 용이함.\u003c/li\u003e\n\u003cli\u003e복잡한 서비스의 경우에는 액션의 흐름을 미리 파악할 필요가 있음.\u003c/li\u003e\n\u003cli\u003e개발자들간의 잘못된 소통을 사전에 방지해줄 수 있음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfigure\u003e\n    \u003cimg src=\"/ox-hugo/plantuml-activity-reps.png\"/\u003e \n\u003c/figure\u003e\n\n\u003ch2 id=\"액티비티-다이어그램-그리기\"\u003e액티비티 다이어그램 그리기\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ePlant UML 을 이용하여 아래와 같은 절차를 통해서 그릴 수 있음.\n\u003cul\u003e\n\u003cli\u003e본 섹션에서는 서비스 설계에 필요한 최소화를 설명하며 \u003ca class=\"link\" href=\"https://plantuml.com/ko/activity-diagram-beta\"  target=\"_blank\" rel=\"noopener\"\n    \u003ePlant UML 설명\u003c/a\u003e 을 참고\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e메인 컴포넌트에서 확장해나가는 방식으로 그릴 수 있음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"관련-컴포넌트-정의\"\u003e관련 컴포넌트 정의\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e다수 컴포넌트가 포함된 엑티비티를 그릴 경우에만 해당됨.\n\u003cul\u003e\n\u003cli\u003e엑티비티 다이어그램은 하나의 컴포넌트에 대한 상세 흐름을 정의하는 경우가 다수이므로 본 단계를 수행하지 않을 수 있음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cpre\u003e\u003ccode class=\"language-plantuml\" data-lang=\"plantuml\"\u003eskinparam backgroundcolor transparent\n\n|컴포넌트1|\n|메인컴포넌트|\n|컴포넌트2|\n\n|메인컴포넌트|\nstart\nstop\n\u003c/code\u003e\u003c/pre\u003e\u003cfigure\u003e\n    \u003cimg src=\"/ox-hugo/plantuml-activity-def-comps.png\"/\u003e \n\u003c/figure\u003e\n\n\u003ch3 id=\"메인-컴포넌트의-결정-로직-정의\"\u003e메인 컴포넌트의 결정 로직 정의\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e메인 컴포넌트의 로직을 중심으로 프로세스를 크게 그림.\n\u003cul\u003e\n\u003cli\u003e다른 컴포넌트와 연동은 표시하는 정도 수준\u003c/li\u003e\n\u003cli\u003e결정 및 병렬 로직등은 상세하게 보여야 함.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cpre\u003e\u003ccode class=\"language-plantuml\" data-lang=\"plantuml\"\u003eskinparam backgroundcolor transparent\n\n|컴포넌트1|\n|메인컴포넌트|\n|컴포넌트2|\n\n|메인컴포넌트|\nstart\n\nif (조건을 만족하는지?) then (예)\n        :위의 조건을 만족하는경우\n        병렬 프로세스를 시작;\n        fork\n                :컴포넌트1에 요청;\n        fork again\n                :컴포넌트2에 요청;\n        end fork\nelse (아니요)\n        :틀렸을때 수행할 프로세스;\nendif\n\nstop\n\u003c/code\u003e\u003c/pre\u003e\u003cfigure\u003e\n    \u003cimg src=\"/ox-hugo/plantuml-activity-main-logic.png\"/\u003e \n\u003c/figure\u003e\n\n\u003ch3 id=\"메인-컴포넌트의-로직-상세화\"\u003e메인 컴포넌트의 로직 상세화\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e결정 로직 이후의 로직을 조금씩 상세화 수행\n\u003cul\u003e\n\u003cli\u003e실패시 장애 조치(failover) 로직 등에 대해서 상세화 수행\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cpre\u003e\u003ccode class=\"language-plantuml\" data-lang=\"plantuml\"\u003eskinparam backgroundcolor transparent\n\n|컴포넌트1|\n|메인컴포넌트|\n|컴포넌트2|\n|메인컴포넌트|\nstart\n\nif (조건을 만족하는지?) then (예)\n        :위의 조건을 만족하는경우\n        병렬 프로세스를 시작;\n        fork\n                :컴포넌트1에 요청;\n        fork again\n                :컴포넌트2에 요청;\n        end fork\nelse (아니요)\n        repeat :다음 failover;\n        :재시도 수행;\n        repeat while (end of failovers?)\nendif\n\nstop\n\u003c/code\u003e\u003c/pre\u003e\u003cfigure\u003e\n    \u003cimg src=\"/ox-hugo/plantuml-activity-main-detail.png\"/\u003e \n\u003c/figure\u003e\n\n\u003ch3 id=\"타컴포넌트의-처리-로직-상세화\"\u003e타컴포넌트의 처리 로직 상세화\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e타컴포넌트와 연동되는 부분에 대한 상세화\n\u003cul\u003e\n\u003cli\u003e타컴포넌트에서 요구되는 처리를 기반으로 작성\n\u003cul\u003e\n\u003cli\u003e해당 컴포넌트의 흐름을 컴포넌트 개발자들 간의 합의 및 설계\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cpre\u003e\u003ccode class=\"language-plantuml\" data-lang=\"plantuml\"\u003eskinparam backgroundcolor transparent\n\n|컴포넌트1|\n|메인컴포넌트|\n|컴포넌트2|\n|메인컴포넌트|\nstart\n\nif (조건을 만족하는지?) then (예)\n        :위의 조건을 만족하는경우\n        병렬 프로세스를 시작;\n        fork\n                :컴포넌트1에 요청;\n                |컴포넌트1|\n                :처리;\n                |메인컴포넌트|\n                :요청처리;\n        fork again\n                :컴포넌트2에 요청;\n                |컴포넌트2|\n                :처리;\n                |메인컴포넌트|\n                :요청처리;\n        end fork\nelse (아니요)\n        repeat :다음 failover;\n        :재시도 수행;\n        repeat while (end of failovers?)\nendif\n\nstop\n\u003c/code\u003e\u003c/pre\u003e\u003cfigure\u003e\n    \u003cimg src=\"/ox-hugo/plantuml-activity-full.png\"/\u003e \n\u003c/figure\u003e\n\n"},{id:14,href:"https://www.hackartist.io/infra/docker/manage-db/",title:"MongoDB Container",description:"This page describes how to manage a database as a docker container.",content:"\u003ch2 id=\"creating-mongodb-container\"\u003eCreating MongoDB container\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003edocker\u003c/code\u003e commands\u003c/li\u003e\n\u003c/ul\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eFlags\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e-d\u003c/td\u003e\n\u003ctd\u003eRunning on deamon mode with acquisition of TTY\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e-p\u003c/td\u003e\n\u003ctd\u003eBinding container port to host machine\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e-v\u003c/td\u003e\n\u003ctd\u003eMounting host path to container path\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u0026ndash;name\u003c/td\u003e\n\u003ctd\u003eContainer name\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u0026ndash;restart\u003c/td\u003e\n\u003ctd\u003eRestart policy (\u003ccode\u003ealways\u003c/code\u003e means automatic start when turning off)\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003edocker run -d -p 27017:27017 \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e       --restart always \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e       -v /Users/hackartist/data/docker/mongo/data:/data/db \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e       --name mongo mongo\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"management-of-mongodb\"\u003eManagement of MongoDB\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eYou can use GUI tools like Robo 3T or MongoDB compass.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfigure\u003e\n    \u003cimg src=\"/ox-hugo/2021-01-26_23-04-57_screenshot.png\"\n         alt=\"Figure 1: robo3t\"/\u003e \u003cfigcaption\u003e\n            \u003cp\u003e\u003cspan class=\"figure-number\"\u003eFigure 1: \u003c/span\u003erobo3t\u003c/p\u003e\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003ch2 id=\"create-database-and-insert-data\"\u003eCreate database and insert data\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eYou can insert sample data in \u003ccode\u003emongodb\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cpre\u003e\u003ccode class=\"language-mongo\" data-lang=\"mongo\"\u003euse emacs\ndb.users.insert([\n    {\n        _id : ObjectId(\u0026quot;507f191e810c19729de860ea\u0026quot;),\n        title: \u0026quot;test\u0026quot;,\n        description: \u0026quot;test\u0026quot;,\n        tags: ['mongodb', 'database', 'NoSQL'],\n        likes: 100\n    },\n    {\n        title: \u0026quot;test2\u0026quot;,\n        description: \u0026quot;description2\u0026quot;,\n        tags: ['mongodb', 'database', 'NoSQL'],\n        likes: 100\n    },\n\n])\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"listing-data\"\u003eListing data\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eUse \u003ccode\u003efind\u003c/code\u003e function to list data.\n\u003cul\u003e\n\u003cli\u003eNote that change \u003ccode\u003eusers\u003c/code\u003e to your collection\u0026rsquo;s name.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cpre\u003e\u003ccode class=\"language-mongo\" data-lang=\"mongo\"\u003edb.users.find()\n\u003c/code\u003e\u003c/pre\u003e"},{id:15,href:"https://www.hackartist.io/ops/introduction/",title:"Testing and Operations",description:"This page introduces how we monitor and test services.",content:"\u003cp\u003eTesting and Operating services\u003c/p\u003e\n\u003ch2 id=\"key-features\"\u003eKey features\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTesting\u003c/li\u003e\n\u003cli\u003eService monitoring\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"key-skills\"\u003eKey skills\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDefine and automate test cases\u003c/li\u003e\n\u003cli\u003eDefine and analyze metrics\u003c/li\u003e\n\u003cli\u003eProcess establishment\u003c/li\u003e\n\u003c/ul\u003e\n"},{id:16,href:"https://www.hackartist.io/infra/docker/manage-image/",title:"Creation of Docker Image",description:"This page explains how to manage docker images.",content:"\u003ch2 id=\"image-management\"\u003eImage management\u003c/h2\u003e\n\u003ch3 id=\"what-is-docker-image\"\u003eWhat is docker image?\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eTemplate for containers\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"listing-images\"\u003eListing images\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eUse \u003ccode\u003edocker images\u003c/code\u003e command\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eRepository\u003c/code\u003e means a storage for a docker image.\n\u003cul\u003e\n\u003cli\u003eUsually, we call the string after \u003ccode\u003e/\u003c/code\u003e of repository to the name of an image.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eAn image means a single template formed by hash.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003edocker images\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eREPOSITORY\u003c/th\u003e\n\u003cth\u003eTAG\u003c/th\u003e\n\u003cth\u003eIMAGE\u003c/th\u003e\n\u003cth\u003eID\u003c/th\u003e\n\u003cth\u003eCREATED\u003c/th\u003e\n\u003cth\u003eSIZE\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eubuntu\u003c/td\u003e\n\u003ctd\u003elatest\u003c/td\u003e\n\u003ctd\u003eadafef2e596e\u003c/td\u003e\n\u003ctd\u003e7\u003c/td\u003e\n\u003ctd\u003emonths  ago\u003c/td\u003e\n\u003ctd\u003e73.9MB\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eubuntu\u003c/td\u003e\n\u003ctd\u003e18.04\u003c/td\u003e\n\u003ctd\u003ed27b9ffc5667\u003c/td\u003e\n\u003ctd\u003e7\u003c/td\u003e\n\u003ctd\u003emonths  ago\u003c/td\u003e\n\u003ctd\u003e64.2MB\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003emongo\u003c/td\u003e\n\u003ctd\u003e4.2.3\u003c/td\u003e\n\u003ctd\u003ebcef5fd2979d\u003c/td\u003e\n\u003ctd\u003e11\u003c/td\u003e\n\u003ctd\u003emonths  ago\u003c/td\u003e\n\u003ctd\u003e386MB\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"pruning-docker-images\"\u003ePruning docker images\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eSometime, we want to remove all unused images due to lack of storage.\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eprune\u003c/code\u003e deletes all images not to be containerized.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003edocker image prune -f\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eYou can remove all volumes not to be mapped to any container.\n\u003cul\u003e\n\u003cli\u003eRemove all volumes not to be mounted\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003edocker volume prune -f\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eSimilarly, you can prune unused containers by using \u003ccode\u003econtainer\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"modification-of-docker-image\"\u003e\u003cspan class=\"org-todo done DONE\"\u003eDONE\u003c/span\u003e Modification of docker image\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLife cycle of docker image\n\u003col\u003e\n\u003cli\u003eCreating docker image.\u003c/li\u003e\n\u003cli\u003eExecuting some changes in the container.\u003c/li\u003e\n\u003cli\u003eCommitting the changes of container to the image.\u003c/li\u003e\n\u003cli\u003ePushing the image to the repository.\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfigure\u003e\n    \u003cimg src=\"/ox-hugo/docker-life-cycle.png\"/\u003e \n\u003c/figure\u003e\n\n\u003ch3 id=\"creating-your-own-docker-image\"\u003eCreating your own docker image\u003c/h3\u003e\n\u003ch4 id=\"creating-base-container\"\u003eCreating base container\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eUse \u003ccode\u003earchlinux\u003c/code\u003e image as a base container.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003edocker run -it --name archlinux archlinux\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"changing-some-contents-in-the-container\"\u003eChanging some contents in the container\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eCreating a new file.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;new file\u0026#34;\u003c/span\u003e \u0026gt;\u0026gt; /root/readme.md\n\u003cspan class=\"nb\"\u003eexit\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"committing-and-push-the-image\"\u003eCommitting and push the image\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eYou can use \u003ccode\u003ecommit\u003c/code\u003e sub-command to store your change in a image.\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003edocker commit -m \u0026quot;{{message}}\u0026quot; {{container-name}} {{image-repository}}:{{tag-name}}\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003edocker commit -m \u003cspan class=\"s2\"\u003e\u0026#34;my own image\u0026#34;\u003c/span\u003e archlinux hackartist/my-own-image:latest\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eimages\u003c/code\u003e sub-command help us to list images.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003edocker images\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eREPOSITORY\u003c/th\u003e\n\u003cth\u003eTAG\u003c/th\u003e\n\u003cth\u003eIMAGE\u003c/th\u003e\n\u003cth\u003eID\u003c/th\u003e\n\u003cth\u003eCREATED\u003c/th\u003e\n\u003cth\u003eSIZE\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003ehackartist/my-own-image\u003c/td\u003e\n\u003ctd\u003elatest\u003c/td\u003e\n\u003ctd\u003e3b7256abb727\u003c/td\u003e\n\u003ctd\u003e8\u003c/td\u003e\n\u003ctd\u003eminutes  ago\u003c/td\u003e\n\u003ctd\u003e406MB\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ehackartist/docker-dns\u003c/td\u003e\n\u003ctd\u003elatest\u003c/td\u003e\n\u003ctd\u003ea006dfefbbbf\u003c/td\u003e\n\u003ctd\u003e7\u003c/td\u003e\n\u003ctd\u003emonths   ago\u003c/td\u003e\n\u003ctd\u003e422MB\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003erun\u003c/code\u003e 하위명령어를 통해서 컨테이너 생성 후 확인\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003edocker run -it --name myarch hackartist/my-own-image:latest\ncat /root/readme.md\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"building-docker-image\"\u003e\u003cspan class=\"org-todo done DONE\"\u003eDONE\u003c/span\u003e Building docker image\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eSimilar with \u003ca class=\"link\" href=\"#committing-and-push-the-image\" \u003eCommitting and push the image\u003c/a\u003e, you can create and build an image.\n\u003cul\u003e\n\u003cli\u003eRefer to \u003ca class=\"link\" href=\"https://github.com/hackartists/dockerize\"  target=\"_blank\" rel=\"noopener\"\n    \u003eDockerize github\u003c/a\u003e.\n\u003col\u003e\n\u003cli\u003eWrite your code\u003c/li\u003e\n\u003cli\u003eWrite \u003ccode\u003eDockerfile\u003c/code\u003e script\u003c/li\u003e\n\u003cli\u003eExecute \u003ccode\u003edocker build\u003c/code\u003e to build a docker image\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"간단한-예제-코드-개발\"\u003e간단한 예제 코드 개발\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ego\u003c/code\u003e 개발 언어로 헬로우 월드를 개발\n\u003cul\u003e\n\u003cli\u003e상세 내용은 개발 섹션을 참고\u003c/li\u003e\n\u003cli\u003e파일 이름은 \u003ccode\u003emain.go\u003c/code\u003e 로 지정\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nx\"\u003emain\u003c/span\u003e\n\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fmt\u0026#34;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ePrintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;hello world\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"예제-코드-실행\"\u003e예제 코드 실행\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ego mod init {{package name}}\u003c/code\u003e 은 의존성 관리 및 \u003ccode\u003eGOPATH\u003c/code\u003e 가 아닌 곳에서 빌드를 위한 프로젝트 관리\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ego build\u003c/code\u003e 를 통해서 해당 프로그램을 빌드\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e-o\u003c/code\u003e 옵션으로 실행 파일 이름 지정\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ego mod init github.com/hackartists/dockerize\ngo build -o app\n./app\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"dockerfile-활용\"\u003eDockerfile 활용\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003edocker build\u003c/code\u003e 를 통해서 이미지 생성\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e-f\u003c/code\u003e 옵션으로 \u003ccode\u003eDockerfile\u003c/code\u003e 이름 설정\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e./Dockerfile\u003c/code\u003e 은 기본 설정이라서 생략 가능\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-t\u003c/code\u003e 옵션으로 레포지토리 및 태그 이름을 지정\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e.\u003c/code\u003e 은 도커 컨텍스트 디렉토리를 의미\n\u003cul\u003e\n\u003cli\u003e지정된 디렉토리 이하로 모든 파일을 도커 빌드를 위해서 로딩함.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e.dockerignore\u003c/code\u003e 를 통해서 불필요한 디렉토리를 제외할 수 있음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003edocker build -f Dockerfile -t hackartist/go-hello-world .\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"dockerfile-스크립트\"\u003eDockerfile 스크립트\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e빌드를 위한 최초 이미지 선택\n\u003cul\u003e\n\u003cli\u003e위의 예제는 \u003ccode\u003ego\u003c/code\u003e 언어를 사용하기 때문에 \u003ccode\u003egolang:latest\u003c/code\u003e 이미지를 활용\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e빌드 커맨드 수행\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ego build -o app\u003c/code\u003e 으로 빌드 가능\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dockerfile\" data-lang=\"dockerfile\"\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"s\"\u003e golang:latest\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eADD\u003c/span\u003e . /workdir\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWORKDIR\u003c/span\u003e\u003cspan class=\"s\"\u003e /workdir\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e go build -o app\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCMD\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;/workdir/app\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"도커-업로드--push--하기\"\u003e도커 업로드(push) 하기\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e생성한 도커 이미지를 해당 레포지토리에 업로드\n\u003cul\u003e\n\u003cli\u003e도메인 이름이 없는 경우 자동으로 \u003ccode\u003edocker.io\u003c/code\u003e 가 추가됨.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003edocker push hackartist/go-hello-world\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e"},{id:17,href:"https://www.hackartist.io/blog/blog-introduction/",title:"Blog Introduction",description:"This page introduces the purpose of this blog.",content:"\u003cp\u003eThis blog aims to study and share everything to develop and operate services\u003c/p\u003e\n\u003cp\u003eFeel free to give me feedback about my mistakes\u003c/p\u003e\n"},{id:18,href:"https://www.hackartist.io/infra/docker/docker-build-advanced/",title:"Advanced docker build technique",description:"description",content:"\u003ch2 id=\"usage-of-dockerignore\"\u003eUsage of \u003ccode\u003eDockerignore\u003c/code\u003e\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBasically, \u003ccode\u003edocker build\u003c/code\u003e loads all sub directories which cause heavy overhead.\n\u003cul\u003e\n\u003cli\u003eIf there are lots of sub directories, \u003ccode\u003ebuild\u003c/code\u003e needs a lot of time to load all data.\u003c/li\u003e\n\u003cli\u003eWe need to ignore unnecessary directories to reduce loading time.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e.dockerignore\u003c/code\u003e prevents to load some files and directories.\n\u003cul\u003e\n\u003cli\u003eBasically, we can describe original names of files or directories, but it supports some advanced description technique.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ebuild\u003c/code\u003e means a simple directory name form.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e*/temp*\u003c/code\u003e describes directories started with \u003ccode\u003etemp\u003c/code\u003e inside 1-level sub-directories.\n\u003cul\u003e\n\u003cli\u003eFor example, \u003ccode\u003elog/temp\u003c/code\u003e will be ignored from building context.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e*/*/temp*\u003c/code\u003e similarly describes directories started with \u003ccode\u003etemp\u003c/code\u003e inside 2-level sub-directories.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003etemp?\u003c/code\u003e means all directories named by 5 characters started with \u003ccode\u003etemp\u003c/code\u003e.\n\u003cul\u003e\n\u003cli\u003eFor example, there are \u003ccode\u003etempa\u003c/code\u003e , \u003ccode\u003etempb\u003c/code\u003e and so on.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e# comment\nbuild\n*/temp*\n*/*/temp*\ntemp?\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"separating-building-image-from-production-image\"\u003eSeparating building image from production image\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eIn \u003ca class=\"link\" href=\"/infra/docker/manage-image/\" \u003eDockerfile script\u003c/a\u003e, I have described a way to build an image by \u003ccode\u003eDockerfile\u003c/code\u003e.\n\u003cul\u003e\n\u003cli\u003eWhen building docker images, we uses unnecessary packages in production environment.\n\u003cul\u003e\n\u003cli\u003eTherefore, we need to remove the redundant files.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eWe can separate production deployment images from build images.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eI have named a building image to \u003ccode\u003ebuild\u003c/code\u003e by \u003ccode\u003eas build\u003c/code\u003e.\n\u003cul\u003e\n\u003cli\u003eSimilarly, if you need lots of different building environments, you can define multiple environments named by different one.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIn building production image, I could have access to \u003ccode\u003ebuild\u003c/code\u003e image by \u003ccode\u003e--from={{name}}\u003c/code\u003e.\n\u003cul\u003e\n\u003cli\u003eAt this, I checked that \u003ccode\u003egolang:latest\u003c/code\u003e image was based on \u003ccode\u003edebian:buster\u003c/code\u003e, therefore I used the same image for production build.\u003c/li\u003e\n\u003cli\u003eAs I\u0026rsquo;ve mentioned, we can copy files from multiple environments defined in advance.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dockerfile\" data-lang=\"dockerfile\"\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"s\"\u003e golang:latest as build\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eADD\u003c/span\u003e . /workdir\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWORKDIR\u003c/span\u003e\u003cspan class=\"s\"\u003e /workdir\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eRUN\u003c/span\u003e go build -o app\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eFROM\u003c/span\u003e\u003cspan class=\"s\"\u003e debian/buster\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eWORKDIR\u003c/span\u003e\u003cspan class=\"s\"\u003e /app\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCOPY\u003c/span\u003e --from\u003cspan class=\"o\"\u003e=\u003c/span\u003ebuild /workdir/app /app/app\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eCMD\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;/app/app\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e"},{id:19,href:"https://www.hackartist.io/infra/docker/docker-compose/",title:"Management of multiple containers",description:"This page explains how to manage multiple dockers.",content:"\u003ch2 id=\"introduction-of-docker-compose\"\u003eIntroduction of docker compose\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eDocker compose\u003c/code\u003e helps us manage multiple containers with a file.\n\u003cul\u003e\n\u003cli\u003eDefine a network\u003c/li\u003e\n\u003cli\u003eDefine containers\u003c/li\u003e\n\u003cli\u003eFor each container, it defines their images, environments, ports and so on.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfigure\u003e\n    \u003cimg src=\"/ox-hugo/docker-compose-prosess.png\"/\u003e \n\u003c/figure\u003e\n\n\u003ch2 id=\"docker-network-configuration\"\u003eDocker network configuration\u003c/h2\u003e\n\u003ch3 id=\"network-information\"\u003eNetwork information\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eSetting the name of docker network\n\u003cul\u003e\n\u003cli\u003eI set the name to \u003ccode\u003edev-net\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIP range of \u003ccode\u003edevnet\u003c/code\u003e was set to \u003ccode\u003e192.168.100.0/24\u003c/code\u003e.\n\u003cul\u003e\n\u003cli\u003eNamely, all of containers in \u003ccode\u003edev-net\u003c/code\u003e network have \u003ccode\u003e192.168.100.x\u003c/code\u003e IP address.\u003c/li\u003e\n\u003cli\u003eThe above expression is called by CIDR which will be dealt in network section.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"creating-a-docker-network\"\u003eCreating a docker network\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eGenerating a docker network with using network configuration described in \u003ca class=\"link\" href=\"#network-information\" \u003eNetwork information\u003c/a\u003e section.\n\u003cul\u003e\n\u003cli\u003eIt can be automatically generated by \u003ccode\u003edocker compose\u003c/code\u003e, but I will describe how you can create the docker network in manual.\u003c/li\u003e\n\u003cli\u003eI recommend that you manually create the network rather than automatic creation for \u003ccode\u003eMac OS\u003c/code\u003e, I will describe why I recommend it in docker virtual private network(VPN) section.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003edocker network create --attachable --subnet 192.168.100.0/24 devnet\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"docker-container-configuration\"\u003eDocker container configuration\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eIn this phase, I describe container information I need to configure.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"image-collection\"\u003eImage collection\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eChoose docker images which you want to use.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003ePurpose\u003c/th\u003e\n\u003cth\u003eImage\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eDatabase\u003c/td\u003e\n\u003ctd\u003emongo:4\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eApplication server\u003c/td\u003e\n\u003ctd\u003egolang:1.15\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"configuring-container-information\"\u003eConfiguring container information\u003c/h3\u003e\n\u003ch4 id=\"setting-container-names\"\u003eSetting container names\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eSetting names for each container.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003ePurpose\u003c/th\u003e\n\u003cth\u003eContainer name\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eDatabase\u003c/td\u003e\n\u003ctd\u003emongodb\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDevelopment server\u003c/td\u003e\n\u003ctd\u003egreeting-server\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch4 id=\"setting-environment-variables\"\u003eSetting environment variables\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eSome containers require environment variables.\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003emongodb\u003c/code\u003e container needs some environment variables.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eContainer name\u003c/th\u003e\n\u003cth\u003eEnvironment variables\u003c/th\u003e\n\u003cth\u003eValue\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003emongodb\u003c/td\u003e\n\u003ctd\u003eMONGO_INITDB_ROOT_USERNAME\u003c/td\u003e\n\u003ctd\u003eroot\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003emongodb\u003c/td\u003e\n\u003ctd\u003eMONGO_INITDB_ROOT_PASSWORD\u003c/td\u003e\n\u003ctd\u003eroot\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch4 id=\"setting-container-ports\"\u003eSetting container ports\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eWe can bind containers' ports to host machine\u0026rsquo;s ports.\u003c/li\u003e\n\u003cli\u003eThere are two ways to have access to guest containers from host machine.\n\u003col\u003e\n\u003cli\u003eDirect access to container\u0026rsquo;s IP.\n\u003cul\u003e\n\u003cli\u003eBasically, it can\u0026rsquo;t be used on \u003ccode\u003eMac OS\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eBinding container ports to host machine.\n\u003cul\u003e\n\u003cli\u003eAccess to bound ports to \u003ccode\u003elocalhost\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eContainer name\u003c/th\u003e\n\u003cth\u003eHost port\u003c/th\u003e\n\u003cth\u003eContainer port\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003emongodb\u003c/td\u003e\n\u003ctd\u003e27017\u003c/td\u003e\n\u003ctd\u003e27017\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003egreeting-server\u003c/td\u003e\n\u003ctd\u003e3000\u003c/td\u003e\n\u003ctd\u003e3000\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch4 id=\"setting-volume-mounts\"\u003eSetting volume mounts\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eMounting Some path from host to container.\n\u003cul\u003e\n\u003cli\u003eAssume that \u003ccode\u003ePROJECT_ROOT\u003c/code\u003e is \u003ccode\u003e/home/hackartist/data/greeting-server\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eContainer name\u003c/th\u003e\n\u003cth\u003eHost path\u003c/th\u003e\n\u003cth\u003eContainer path\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003emongodb\u003c/td\u003e\n\u003ctd\u003e$PROJECT_ROOT/.build/data\u003c/td\u003e\n\u003ctd\u003e/data/db\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003egreeting-server\u003c/td\u003e\n\u003ctd\u003e$PROJECT_ROOT\u003c/td\u003e\n\u003ctd\u003e/workdir\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2 id=\"docker-compose-configuration\"\u003eDocker compose configuration\u003c/h2\u003e\n\u003ch3 id=\"writing-docker-compose-dot-yaml-file\"\u003eWriting docker-compose.yaml file\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eComposing dockers with \u003ca class=\"link\" href=\"#docker-container-configuration\" \u003eDocker container configuration\u003c/a\u003e.\n\u003cul\u003e\n\u003cli\u003eIn \u003ccode\u003enetworks\u003c/code\u003e section, I described the network name which has been manually created.\n\u003cul\u003e\n\u003cli\u003eThe containers in the network have a predefined subnet.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eDescribing containers' information in \u003ccode\u003eservices\u003c/code\u003e section.\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eservices\u003c/code\u003e is composed of  \u003ccode\u003emongodb\u003c/code\u003e and \u003ccode\u003egreeting-server\u003c/code\u003e.\n\u003cul\u003e\n\u003cli\u003eThe services' names of each container are used for containers' aliases in the composed network.\u003c/li\u003e\n\u003cli\u003eThese aliases make each container able to access to other containers with the aliases as domain names.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003erestart\u003c/code\u003e section describes restart policy which makes containers are automatically restarted.\u003c/li\u003e\n\u003cli\u003eOther configurations related to the containers should be described in \u003ccode\u003eports\u003c/code\u003e, \u003ccode\u003eenvironment\u003c/code\u003e and \u003ccode\u003evolumes\u003c/code\u003e sections.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eworking_dir\u003c/code\u003e denotes the location which the container is started in.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecommand\u003c/code\u003e describes starting command when the container is started.\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003egreeting-server\u003c/code\u003e runs \u003ccode\u003ego run main.go\u003c/code\u003e command when it starts.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cpre\u003e\u003ccode class=\"language-docker-compose\" data-lang=\"docker-compose\"\u003eversion: \u0026quot;3.8\u0026quot;\n\nnetworks:\n  default:\n    external:\n      name: devnet\n\nservices:\n  mongodb:\n    image: mongo:4\n    container_name: mongodb\n    restart: always\n    ports:\n      - 27017:27017\n    environment:\n      - MONGO_INITDB_ROOT_USERNAME: root\n      - MONGO_INITDB_ROOT_PASSWORD: root\n    volumes:\n      - $PROJECT_ROOT/.build/data:/data/db\n  greeting-server:\n    image: golang:1.15\n    container_name: greeting-server\n    restart: always\n    ports:\n      - 3000:3000\n    volumes:\n      - $PROJECT_ROOT:/workdir\n    working_dir: /workdir\n    command: go run main.go\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"running-docker-compose\"\u003eRunning docker compose\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eUsing a configuration file written in \u003ca class=\"link\" href=\"#writing-docker-compose-dot-yaml-file\" \u003eWriting docker-compose.yaml file\u003c/a\u003e section.\n\u003cul\u003e\n\u003cli\u003eThe configuration file passes an environmental variable, \u003ccode\u003ePROJECT_ROOT\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-f\u003c/code\u003e flag describes a configuration filename of docker compose.\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003edocker-compose.yaml\u003c/code\u003e is a default configuration name, so it can be omitted.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-p\u003c/code\u003e flag describes a name of a docker stack which the container belongs to. It could make us easy to manage the containers.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eup\u003c/code\u003e command composes dockers.\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e-d\u003c/code\u003e flag indicates that it should be run as background without attaching I/O.\u003c/li\u003e\n\u003cli\u003eIf the only \u003ccode\u003emongodb\u003c/code\u003e should be ran, \u003ccode\u003e... up -d mongodb\u003c/code\u003e could be executed.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"nv\"\u003ePROJECT_ROOT\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e/home/hackartist/data/greeting-server \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e            docker-compose -f docker-compose.yaml -p greeting-server up -d\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"shutting-down-the-docker-compose\"\u003eShutting down the docker compose\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003edown\u003c/code\u003e command removes all containers and network created by the docker compose.\n\u003cul\u003e\n\u003cli\u003eIf some containers would be orphans due to renaming or something else, \u003ccode\u003e--remove-orphans\u003c/code\u003e flag makes them removed.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"nv\"\u003ePROJECT_ROOT\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e/home/hackartist/data/greeting-server \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e            docker-compose -f docker-compose.yaml -p greeting-server down --remove-orphans\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e"},{id:20,href:"https://www.hackartist.io/infra/docker/docker-vpn/",title:"Implementation of Docker VPN",description:"This page describes how to integrate network and communication with containers on Mac OS via VPN.",content:"\u003ch2 id=\"도커-네트워크-개요-및-제약사항\"\u003e도커 네트워크 개요 및 제약사항\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e도커 네트워크는 도커들 간의 사설 네트워크가 구축되고, 호스트 머신과 \u003ccode\u003ebridge\u003c/code\u003e 인터페이스를 통해서 통신\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMac OS의 도커는 가상 머신(virtual machine) 에서 구동되는 것이기 때문에, \u003ccode\u003ebridge\u003c/code\u003e 가 없음.\u003c/li\u003e\n\u003cli\u003e따라서, Mac OS 에서는 호스트 머신과 도커 컨테이너들이 직접적으로 통신할 수 없음.\n\u003cul\u003e\n\u003cli\u003e상세한 내용은 \u003ca class=\"link\" href=\"https://docs.docker.com/docker-for-mac/networking/\"  target=\"_blank\" rel=\"noopener\"\n    \u003e도커 네트워크\u003c/a\u003e를 참고\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eMac OS 에서 호스트 머신이 컨테이너에 접근하기 위해서, \u003ccode\u003e-p\u003c/code\u003e 옵션을 통해 포트 바인딩이 필요함.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e많은 포트가 바인딩되는 경우 이에 대한 관리가 어려움\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"vpn을-이용한-호스트-머신과-도커-네트워크-터널링\"\u003eVPN을 이용한 호스트 머신과 도커 네트워크 터널링\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e호스트 머신을 도커 네트워크에 virtual private network(VPN)으로 연결하여 라우팅 수행\n\u003cul\u003e\n\u003cli\u003eVPN 의 개념은 네트워크 섹션을 참고\u003c/li\u003e\n\u003cli\u003eVPN 터널링을 통해서 \u003ca class=\"link\" href=\"/infra/docker/docker-compose/\" \u003eCreating a docker network\u003c/a\u003e 에서 생성된 주소는 해당 VPN 으로 라우팅되도록 설정\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eVPN 터널링 및 라우팅 설정이 된 이후에는 도커 컨테이너에 접속할 때 별도 포트바인딩이 필요없음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"vpn-터널링-및-라우팅-설정-절차\"\u003eVPN 터널링 및 라우팅 설정 절차\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e본 섹션에서는 Open VPN 을 통해서 설정하는 방법에 대해서 설명\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfigure\u003e\n    \u003cimg src=\"/ox-hugo/vpn-wbs.png\"/\u003e \n\u003c/figure\u003e\n\n\u003ch2 id=\"open-vpn-설정\"\u003eOpen VPN 설정\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOpen VPN 을 설정하기 위해서 \u003ca class=\"link\" href=\"https://hub.docker.com/r/kylemanna/openvpn\"  target=\"_blank\" rel=\"noopener\"\n    \u003ekylemanna/openvpn\u003c/a\u003e 이미지를 사용\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"open-vpn-사전-설정\"\u003eOpen VPN 사전 설정\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e사전 설정 단계에서는 컨테이너가 구동되기 전에 필요한 설정 작업을 미리 수행\n\u003cul\u003e\n\u003cli\u003eOpen VPN 으로 발급된 인증서에 기술할 도메인 이름 등을 설정\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"도커-볼륨-생성\"\u003e도커 볼륨 생성\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e도커 볼륨 크게 두가지 방법을 사용할 수 있음.\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003edocker volume\u003c/code\u003e 으로 생성하는 실제 도커의 볼륨\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e호스트 경로\u003c/code\u003e 를 도커 볼륨으로 사용\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"c1\"\u003e## 도커 볼륨 사용시\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eexport\u003c/span\u003e \u003cspan class=\"nv\"\u003eOVPN_DATA\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eovpn-data\ndocker volume create --name \u003cspan class=\"nv\"\u003e$OVPN_DATA\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e## 호스트 경로 사용시\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eexport\u003c/span\u003e \u003cspan class=\"nv\"\u003eOVPN_DATA\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003e$(\u003c/span\u003e\u003cspan class=\"nb\"\u003epwd\u003c/span\u003e\u003cspan class=\"k\"\u003e)\u003c/span\u003e/openvpn \u003cspan class=\"c1\"\u003e# 호스트 머신에서 설정파일을 저장하고자 하는 경로\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"pki-구조-초기화\"\u003ePKI 구조 초기화\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003ePKI 구조는 인증서를 발급/검증하기 위한 구조로 Open VPN 에서 인증서 발급 구조로 사용\n\u003cul\u003e\n\u003cli\u003e상세 설명은 네트워크 섹션 참고\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ePKI 구조를 만들기 위해서 아래와 같은 절차를 거침.\n\u003col\u003e\n\u003cli\u003ePKI 구조를 위한 설정 파일 생성\u003c/li\u003e\n\u003cli\u003ePKI 구조 생성\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003e아래의 명령어를 수행하기 전에 \u003ca class=\"link\" href=\"#%eb%8f%84%ec%bb%a4-%eb%b3%bc%eb%a5%a8-%ec%83%9d%ec%84%b1\" \u003e도커 볼륨 생성\u003c/a\u003e은 이미 완료되어야 함.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003edocker run -v \u003cspan class=\"nv\"\u003e$OVPN_DATA\u003c/span\u003e:/etc/openvpn --rm kylemanna/openvpn:2.4 ovpn_genconfig -u udp://localhost\ndocker run -v \u003cspan class=\"nv\"\u003e$OVPN_DATA\u003c/span\u003e:/etc/openvpn --rm -it kylemanna/openvpn:2.4 ovpn_initpki\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"open-vpn-컨테이너-설정\"\u003eOpen VPN 컨테이너 설정\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e아래와 같이 도커 컴포즈 설정 파일을 작성\n\u003cul\u003e\n\u003cli\u003e\u003ca class=\"link\" href=\"/infra/docker/docker-compose/\" \u003eCreating a docker network\u003c/a\u003e에서 생성된 네트워크를 사용\n\u003cul\u003e\n\u003cli\u003e해당 네트워크를 사용해야지 개발용 도커와 연계할 수 있음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e호스트 경로가 아닌 도커 볼륨을 사용하는 경우에는 코멘트 삭제\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cpre\u003e\u003ccode class=\"language-docker-compose\" data-lang=\"docker-compose\"\u003eversion: \u0026quot;3.9\u0026quot;\n\nnetworks:\n  default:\n    external:\n      name: devnet\n\nservices:\n  vpn.docker:\n    restart: always\n    container_name: vpn.docker\n    image: kylemanna/openvpn:2.4\n    ports:\n       - 1194:1194/udp\n    volumes:\n      - $OVPN_DATA:/etc/openvpn\n    cap_add:\n      - NET_ADMIN\n\n# volumes:\n#   ovpn-data:\n#     external: true\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"open-vpn-컨테이너-실행\"\u003eOpen VPN 컨테이너 실행\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca class=\"link\" href=\"#open-vpn-%ec%bb%a8%ed%85%8c%ec%9d%b4%eb%84%88-%ec%84%a4%ec%a0%95\" \u003eOpen VPN 컨테이너 설정\u003c/a\u003e 에서 작성된 도커 컴포즈를 실행\n\u003cul\u003e\n\u003cli\u003eOpen VPN 도커를 실행하기 전에 \u003ca class=\"link\" href=\"#pki-%ea%b5%ac%ec%a1%b0-%ec%b4%88%ea%b8%b0%ed%99%94\" \u003ePKI 구조 초기화\u003c/a\u003e가 선행 되어야 함.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003edocker-compose -p infra up -d\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"ovpn-인증서-설정\"\u003eOVPN 인증서 설정\u003c/h2\u003e\n\u003ch3 id=\"ovpn-인증서-발급\"\u003eOVPN 인증서 발급\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eVPN에 접속할 때, 사용할 인증서 발급\n\u003cul\u003e\n\u003cli\u003e두번째 단계에서 \u003ca class=\"link\" href=\"#pki-%ea%b5%ac%ec%a1%b0-%ec%b4%88%ea%b8%b0%ed%99%94\" \u003ePKI 구조 초기화\u003c/a\u003e 단계에서 입력한 비밀번호 입력 필요\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e인증서 발급이 완료되고 나면 \u003ccode\u003e$NAME.ovpn\u003c/code\u003e 파일이 생성됨.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"nb\"\u003eexport\u003c/span\u003e \u003cspan class=\"nv\"\u003eNAME\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ehackartist\ndocker run -v \u003cspan class=\"nv\"\u003e$OVPN_DATA\u003c/span\u003e:/etc/openvpn --rm -it kylemanna/openvpn easyrsa build-client-full \u003cspan class=\"nv\"\u003e$NAME\u003c/span\u003e nopass\ndocker run -v \u003cspan class=\"nv\"\u003e$OVPN_DATA\u003c/span\u003e:/etc/openvpn --rm kylemanna/openvpn ovpn_getclient \u003cspan class=\"nv\"\u003e$NAME\u003c/span\u003e \u0026gt; \u003cspan class=\"nv\"\u003e$NAME\u003c/span\u003e.ovpn\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"인증서-수정\"\u003e인증서 수정\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e생성된 인증서를 텍스트 에디터로 열기\n\u003cul\u003e\n\u003cli\u003e아래와 같은 형태의 인증서가 나온것을 확인할 수 있음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003eclient\nnobind\ndev tun\nremote-cert-tls server\n\nremote localhost 1194 udp\n\n\u0026lt;key\u0026gt;\n-----BEGIN PRIVATE KEY-----\n... 생략 ...\n-----END PRIVATE KEY-----\n\u0026lt;/key\u0026gt;\n\u0026lt;cert\u0026gt;\n-----BEGIN CERTIFICATE-----\n... 생략 ...\n-----END CERTIFICATE-----\n\u0026lt;/cert\u0026gt;\n\u0026lt;ca\u0026gt;\n-----BEGIN CERTIFICATE-----\n... 생략 ...\n-----END CERTIFICATE-----\n\u0026lt;/ca\u0026gt;\nkey-direction 1\n\u0026lt;tls-auth\u0026gt;\n#\n# 2048 bit OpenVPN static key\n#\n-----BEGIN OpenVPN Static key V1-----\n... 생략 ...\n-----END OpenVPN Static key V1-----\n\u0026lt;/tls-auth\u0026gt;\n\nredirect-gateway def1\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"open-vpn-연결\"\u003eOpen VPN 연결\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eMac OS 에서는 \u003ccode\u003etunnel blick\u003c/code\u003e 을 사용\n\u003cul\u003e\n\u003cli\u003e설치를 위해서는 아래의 스크립트 실행\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ebrew cask install tunnelblick\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"라우팅-정보-확인\"\u003e라우팅 정보 확인\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003enetstat\u003c/code\u003e 을 이용하여 라우팅 정보 확인\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003etun\u003c/code\u003e 인터페이스와 일부 라우터가 추가된 것을 확인\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003enetstat -nr\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eDestination\u003c/th\u003e\n\u003cth\u003eGateway\u003c/th\u003e\n\u003cth\u003eGenmask\u003c/th\u003e\n\u003cth\u003eFlags\u003c/th\u003e\n\u003cth\u003eMSS\u003c/th\u003e\n\u003cth\u003eWindow\u003c/th\u003e\n\u003cth\u003eirtt\u003c/th\u003e\n\u003cth\u003eIface\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e128.0.0.0\u003c/td\u003e\n\u003ctd\u003e192.168.255.5\u003c/td\u003e\n\u003ctd\u003e128.0.0.0\u003c/td\u003e\n\u003ctd\u003eUG\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003ctd\u003etun0\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e192.168.255.1\u003c/td\u003e\n\u003ctd\u003e192.168.255.5\u003c/td\u003e\n\u003ctd\u003e255.255.255.255\u003c/td\u003e\n\u003ctd\u003eUGH\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003ctd\u003etun0\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e192.168.255.5\u003c/td\u003e\n\u003ctd\u003e0.0.0.0\u003c/td\u003e\n\u003ctd\u003e255.255.255.255\u003c/td\u003e\n\u003ctd\u003eUH\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003ctd\u003etun0\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch4 id=\"라우팅-정보-수정\"\u003e라우팅 정보 수정\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca class=\"link\" href=\"/infra/docker/docker-compose/\" \u003eCreating a docker network\u003c/a\u003e에서 \u003ccode\u003e192.168.100.0/24\u003c/code\u003e 로 네트워크를 생성하였고, 해당 트래픽을 \u003ccode\u003etun0\u003c/code\u003e 인터페이스로 라우팅을 수행\n\u003cul\u003e\n\u003cli\u003e라우팅 테이블을 수정하는 작업인데, 간단하게는 \u003ccode\u003eroute\u003c/code\u003e 명령어를 통해서 수행할 수 있음.\u003c/li\u003e\n\u003cli\u003e본 섹션에서는 \u003ccode\u003eovpn\u003c/code\u003e 파일을 수정하는 방법에 대해서 설명\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003eclient\nnobind\ndev tun\nremote-cert-tls server\n\nremote localhost 1194 udp\n\n\u0026lt;key\u0026gt;\n-----BEGIN PRIVATE KEY-----\n... 생략 ...\n-----END PRIVATE KEY-----\n\u0026lt;/key\u0026gt;\n\u0026lt;cert\u0026gt;\n-----BEGIN CERTIFICATE-----\n... 생략 ...\n-----END CERTIFICATE-----\n\u0026lt;/cert\u0026gt;\n\u0026lt;ca\u0026gt;\n-----BEGIN CERTIFICATE-----\n... 생략 ...\n-----END CERTIFICATE-----\n\u0026lt;/ca\u0026gt;\nkey-direction 1\n\u0026lt;tls-auth\u0026gt;\n#\n# 2048 bit OpenVPN static key\n#\n-----BEGIN OpenVPN Static key V1-----\n... 생략 ...\n-----END OpenVPN Static key V1-----\n\u0026lt;/tls-auth\u0026gt;\n\nroute 192.168.100.0 255.255.255.0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c!--list-separator--\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e라우팅 테이블 확인\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e해당 대역에 대한 라우팅 정보가 추가된 것을 확인\u003c/li\u003e\n\u003c/ul\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eDestination\u003c/th\u003e\n\u003cth\u003eGateway\u003c/th\u003e\n\u003cth\u003eGenmask\u003c/th\u003e\n\u003cth\u003eFlags\u003c/th\u003e\n\u003cth\u003eMSS\u003c/th\u003e\n\u003cth\u003eWindow\u003c/th\u003e\n\u003cth\u003eirtt\u003c/th\u003e\n\u003cth\u003eIface\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e192.168.100.0\u003c/td\u003e\n\u003ctd\u003e192.168.255.5\u003c/td\u003e\n\u003ctd\u003e255.255.255.0\u003c/td\u003e\n\u003ctd\u003eUG\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003ctd\u003etun0\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e192.168.255.1\u003c/td\u003e\n\u003ctd\u003e192.168.255.5\u003c/td\u003e\n\u003ctd\u003e255.255.255.255\u003c/td\u003e\n\u003ctd\u003eUGH\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003ctd\u003etun0\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e192.168.255.5\u003c/td\u003e\n\u003ctd\u003e0.0.0.0\u003c/td\u003e\n\u003ctd\u003e255.255.255.255\u003c/td\u003e\n\u003ctd\u003eUH\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003ctd\u003e0\u003c/td\u003e\n\u003ctd\u003etun0\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n"},{id:21,href:"https://www.hackartist.io/infra/docker/docker-dns/",title:"Implementation of Docker DNS",description:"This page explains how to connect to containers with thier name.",content:"\u003ch2 id=\"purpose\"\u003ePurpose\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThe containers in a same docker network can communicate each other by their alias, but host machine can\u0026rsquo;t connect to them by alias or name.\n\u003cul\u003e\n\u003cli\u003eBasically, the containers' IPs are changed whenever they are restarted.\n\u003cul\u003e\n\u003cli\u003eIt makes us hard to manage and connect to the containers.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIn this section, I aim to share how the host machine communicate with the containers by their containers' names.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"동작-원리\"\u003e동작 원리\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e도커 이름을 풀이해 줄 수 있는 DNS 서버를 개발\n\u003cul\u003e\n\u003cli\u003e해당 서버의 동작은 아래와 같음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfigure\u003e\n    \u003cimg src=\"/ox-hugo/docker-dns.png\"/\u003e \n\u003c/figure\u003e\n\n\u003ch2 id=\"사전-준비-사항\"\u003e사전 준비 사항\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e본 섹션은 호스트 머신과 도커 컨테이너가 직접적인 통신이 가능해야 함.\n\u003cul\u003e\n\u003cli\u003eMac OS는 \u003ca class=\"link\" href=\"/infra/docker/docker-vpn/\" \u003eImplementation of Docker VPN\u003c/a\u003e을 통해서 직접적인 통신이 가능한 상태여야 함.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"도커-dns-구축\"\u003e도커 DNS 구축\u003c/h2\u003e\n\u003ch3 id=\"도커-dns-설정\"\u003e도커 DNS 설정\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ehackartist/docker-dns\u003c/code\u003e 이미지를 사용\n\u003cul\u003e\n\u003cli\u003e도커 및 쿠버네티스(Kubernetes) DNS 기능 제공\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ecluster.local.\u003c/code\u003e 쿠버네티스 검색도메인 제공\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003edocker-compose\u003c/code\u003e 에 아래의 컨테이너 정보 추가\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e/var/run/docker.sock\u003c/code\u003e 은 해당 DNS 는 도커 명령어 인터페이스(CLI) 를 통해서 컨테이너 이름을 IP 주소로 변환\u003c/li\u003e\n\u003cli\u003e이 과정에서 도커 디먼과 통신을 해야하기 때문에 해당 주소를 마운트 해야함.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cpre\u003e\u003ccode class=\"language-docker-compose\" data-lang=\"docker-compose\"\u003edns:\n  restart: always\n  container_name: dns\n  image: hackartist/docker-dns:latest\n  volumes:\n    - /var/run/docker.sock:/var/run/docker.sock\n  ports:\n    - 53:53/udp\n  environment:\n    - ENABLE_K8S_DNS_LOOKUP=false\n    - FALLBACK_DNS=8.8.8.8\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"dns-주소-변경\"\u003eDNS 주소 변경\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e호스트 머신의 DNS 주소를 \u003ccode\u003e127.0.0.1\u003c/code\u003e 로 변경\n\u003cul\u003e\n\u003cli\u003e구축한 도커 DNS 를 기본 DNS로 사용하도록 설정\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e/etc/resolv.conf\u003c/code\u003e 의 내용 또는 네트워크 설정에서 변경할 수 있음.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-cfg\" data-lang=\"cfg\"\u003e\u003cspan class=\"na\"\u003enameserver 127.0.0.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003enameserver 10.96.0.10\u003c/span\u003e\n\u003cspan class=\"na\"\u003enameserver 8.8.8.8\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"dns-서버-테스트\"\u003eDNS 서버 테스트\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003enslookup\u003c/code\u003e 을 통해서 테스트할 수 있음.\n\u003cul\u003e\n\u003cli\u003e서버가 \u003ccode\u003e127.0.0.1\u003c/code\u003e 로 나오면 정상 변경이 적용\n\u003cul\u003e\n\u003cli\u003e변경이 되지 않은 경우에는 네트워크를 비활성화 후에 다시 활성화하여 확인\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e서버가 \u003ccode\u003e127.0.0.1\u003c/code\u003e 로 정상적으로 변경되었는데, 검색이 안되면 아래의 내용 확인\n\u003cul\u003e\n\u003cli\u003e\u003ca class=\"link\" href=\"#%eb%8f%84%ec%bb%a4-dns-%ec%84%a4%ec%a0%95\" \u003e도커 DNS 설정\u003c/a\u003e에서 이름을 \u003ccode\u003econtainer_name\u003c/code\u003e 을 \u003ccode\u003edns\u003c/code\u003e 로 했는지 확인\u003c/li\u003e\n\u003cli\u003e\u003ca class=\"link\" href=\"#%eb%8f%84%ec%bb%a4-dns-%ec%84%a4%ec%a0%95\" \u003e도커 DNS 설정\u003c/a\u003e에서 볼륨 마운트를 정상적으로 했는지 확인\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003eServer:\t\t127.0.0.1\nAddress:\t127.0.0.1#53\n\nName:\tdns\nAddress: 172.51.0.3\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e"},{id:22,href:"https://www.hackartist.io/blog/",title:"Blogs",description:null,content:""},{id:23,href:"https://www.hackartist.io/ops/",title:"Ops",description:null,content:""},{id:24,href:"https://www.hackartist.io/devel/",title:"Devels",description:null,content:""},{id:25,href:"https://www.hackartist.io/design/",title:"Designs",description:null,content:""},{id:26,href:"https://www.hackartist.io/infra/",title:"Infras",description:null,content:""},{id:27,href:"https://www.hackartist.io/emacs/",title:"Emacs",description:null,content:""},];index.add(docs);userinput.addEventListener('input',show_results,true);suggestions.addEventListener('click',accept_suggestion,true);function show_results(){var value=this.value;var results=index.search(value,5);var entry,childs=suggestions.childNodes;var i=0,len=results.length;suggestions.classList.remove('d-none');results.forEach(function(page){entry=document.createElement('div');entry.innerHTML='<a href><span></span><span></span></a>';a=entry.querySelector('a'),t=entry.querySelector('span:first-child'),d=entry.querySelector('span:nth-child(2)');a.href=page.href;t.textContent=page.title;d.textContent=page.description;suggestions.appendChild(entry);});while(childs.length>len){suggestions.removeChild(childs[i])}}
function accept_suggestion(){while(suggestions.lastChild){suggestions.removeChild(suggestions.lastChild);}
return false;}}());